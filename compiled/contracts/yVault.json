{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        }
      ],
      "name": "setMin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
    "1": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
    "2": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/ERC20.sol",
    "23": "contracts/vaults/yVault.sol",
    "3": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/IERC20.sol",
    "4": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/vaults/yVault.sol",
    "exportedSymbols": {
      "yVault": [
        11388
      ]
    },
    "id": 11389,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10923,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:23"
      },
      {
        "absolutePath": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10924,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 11458,
        "src": "57:56:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 10925,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 11645,
        "src": "114:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 10926,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 12052,
        "src": "166:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 10927,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 11855,
        "src": "218:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10928,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 12771,
        "src": "278:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
        "file": "@openzeppelin/contracts/GSN/Context.sol",
        "id": 10929,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 13008,
        "src": "334:49:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IController.sol",
        "file": "../IController.sol",
        "id": 10930,
        "nodeType": "ImportDirective",
        "scope": 11389,
        "sourceUnit": 43,
        "src": "385:28:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10931,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12770,
              "src": "434:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$12770",
                "typeString": "contract ERC20"
              }
            },
            "id": 10932,
            "nodeType": "InheritanceSpecifier",
            "src": "434:5:23"
          }
        ],
        "contractDependencies": [
          11457,
          12770,
          13007
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11388,
        "linearizedBaseContracts": [
          11388,
          12770,
          11457,
          13007
        ],
        "name": "yVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10935,
            "libraryName": {
              "contractScope": null,
              "id": 10933,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11854,
              "src": "452:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11854",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "446:27:23",
            "typeName": {
              "contractScope": null,
              "id": 10934,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11457,
              "src": "466:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11457",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 10938,
            "libraryName": {
              "contractScope": null,
              "id": 10936,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12051,
              "src": "484:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$12051",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "478:26:23",
            "typeName": {
              "id": 10937,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "496:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 10941,
            "libraryName": {
              "contractScope": null,
              "id": 10939,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11644,
              "src": "515:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11644",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "509:27:23",
            "typeName": {
              "id": 10940,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 10943,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11388,
            "src": "542:19:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$11457",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 10942,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11457,
              "src": "542:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11457",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8897945",
            "id": 10946,
            "name": "min",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11388,
            "src": "568:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10944,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "568:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "39353030",
              "id": 10945,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "586:4:23",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9500_by_1",
                "typeString": "int_const 9500"
              },
              "value": "9500"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "6ac5db19",
            "id": 10949,
            "name": "max",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11388,
            "src": "596:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10947,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "596:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 10948,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "623:5:23",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 10951,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11388,
            "src": "635:25:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10950,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f77c4791",
            "id": 10953,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11388,
            "src": "666:25:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10952,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11009,
              "nodeType": "Block",
              "src": "896:156:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10988,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10955,
                                "src": "927:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10987,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12770,
                              "src": "921:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$12770_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 10989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "921:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$12770",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12360,
                          "src": "921:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 10991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "921:24:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 10986,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12759,
                      "src": "906:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 10992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10993,
                  "nodeType": "ExpressionStatement",
                  "src": "906:40:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10994,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10943,
                      "src": "956:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11457",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10996,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10955,
                          "src": "971:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10995,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11457,
                        "src": "964:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$11457_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 10997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "964:14:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11457",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "956:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11457",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10999,
                  "nodeType": "ExpressionStatement",
                  "src": "956:22:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11000,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10951,
                      "src": "988:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 11001,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1001:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1001:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "988:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11004,
                  "nodeType": "ExpressionStatement",
                  "src": "988:23:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11005,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10953,
                      "src": "1021:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11006,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10957,
                      "src": "1034:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1021:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11008,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:24:23"
                }
              ]
            },
            "documentation": null,
            "id": 11010,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "796561726e20",
                            "id": 10964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "794:8:23",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4bb4ad5205c4c7e5c868e606845be068b7317b7eb97e97123cc241afbcfbe649",
                              "typeString": "literal_string \"yearn \""
                            },
                            "value": "yearn "
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 10966,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10955,
                                    "src": "810:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10965,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12770,
                                  "src": "804:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$12770_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 10967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "804:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$12770",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 10968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12344,
                              "src": "804:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 10969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "804:20:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4bb4ad5205c4c7e5c868e606845be068b7317b7eb97e97123cc241afbcfbe649",
                              "typeString": "literal_string \"yearn \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10962,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "777:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "777:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "777:48:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "770:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 10960,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "770:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 10971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "79",
                            "id": 10976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "860:3:23",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                              "typeString": "literal_string \"y\""
                            },
                            "value": "y"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 10978,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10955,
                                    "src": "871:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10977,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12770,
                                  "src": "865:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$12770_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 10979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "865:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$12770",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 10980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12352,
                              "src": "865:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 10981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "865:22:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                              "typeString": "literal_string \"y\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10974,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "843:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "843:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "843:45:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "836:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 10972,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "836:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 10983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 10984,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10959,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12770,
                  "src": "755:5:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$12770_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "755:140:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10955,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11010,
                  "src": "711:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10957,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11010,
                  "src": "727:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "710:37:23"
            },
            "returnParameters": {
              "id": 10985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:23"
            },
            "scope": 11388,
            "src": "698:354:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11034,
              "nodeType": "Block",
              "src": "1104:126:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11029,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10943,
                                "src": "1215:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$11457",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$11457",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 11028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1207:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11027,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1207:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 11030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1207:14:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11024,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10953,
                                "src": "1185:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11023,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1173:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$42_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 11025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1173:23:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$42",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 11026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "1173:33:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 11031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:49:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11019,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1145:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_yVault_$11388",
                                  "typeString": "contract yVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_yVault_$11388",
                                  "typeString": "contract yVault"
                                }
                              ],
                              "id": 11018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1137:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11017,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1137:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 11020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1137:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 11015,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10943,
                            "src": "1121:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11457",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 11016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11402,
                          "src": "1121:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 11021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1121:30:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11484,
                      "src": "1121:51:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:102:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11014,
                  "id": 11033,
                  "nodeType": "Return",
                  "src": "1114:109:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b69ef8a8",
            "id": 11035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:2:23"
            },
            "returnParameters": {
              "id": 11014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11013,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11035,
                  "src": "1098:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11012,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1097:6:23"
            },
            "scope": 11388,
            "src": "1058:172:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11052,
              "nodeType": "Block",
              "src": "1272:85:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11041,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1290:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1290:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11043,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10951,
                          "src": "1304:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1290:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 11045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1316:13:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 11040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1282:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11047,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:48:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11048,
                      "name": "min",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10946,
                      "src": "1340:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11049,
                      "name": "_min",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11037,
                      "src": "1346:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1340:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11051,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:10:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "45dc3dd8",
            "id": 11053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11037,
                  "name": "_min",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11053,
                  "src": "1252:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11036,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1251:11:23"
            },
            "returnParameters": {
              "id": 11039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:0:23"
            },
            "scope": 11388,
            "src": "1236:121:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11070,
              "nodeType": "Block",
              "src": "1414:99:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11059,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1432:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1432:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11061,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10951,
                          "src": "1446:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1432:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 11063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1458:13:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 11058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1424:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11065,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:48:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11066,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10951,
                      "src": "1482:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11067,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11055,
                      "src": "1495:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1482:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11069,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:24:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ab033ea9",
            "id": 11071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11055,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11071,
                  "src": "1386:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1385:21:23"
            },
            "returnParameters": {
              "id": 11057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:0:23"
            },
            "scope": 11388,
            "src": "1363:150:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11088,
              "nodeType": "Block",
              "src": "1570:99:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11077,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1588:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1588:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11079,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10951,
                          "src": "1602:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1588:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 11081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1614:13:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 11076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1580:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11083,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:48:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11084,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10953,
                      "src": "1638:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11085,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11073,
                      "src": "1651:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1638:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11087,
                  "nodeType": "ExpressionStatement",
                  "src": "1638:24:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "92eefe9b",
            "id": 11089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11073,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11089,
                  "src": "1542:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1541:21:23"
            },
            "returnParameters": {
              "id": 11075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1570:0:23"
            },
            "scope": 11388,
            "src": "1519:150:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11108,
              "nodeType": "Block",
              "src": "1865:72:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11105,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10949,
                        "src": "1926:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11102,
                            "name": "min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10946,
                            "src": "1917:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 11098,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1906:4:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_yVault_$11388",
                                      "typeString": "contract yVault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_yVault_$11388",
                                      "typeString": "contract yVault"
                                    }
                                  ],
                                  "id": 11097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1898:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 11096,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1898:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 11099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1898:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 11094,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10943,
                                "src": "1882:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$11457",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 11095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11402,
                              "src": "1882:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 11100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1882:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11561,
                          "src": "1882:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 11103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1882:39:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11577,
                      "src": "1882:43:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11093,
                  "id": 11107,
                  "nodeType": "Return",
                  "src": "1875:55:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "48a0d754",
            "id": 11109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1835:2:23"
            },
            "returnParameters": {
              "id": 11093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11092,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11109,
                  "src": "1859:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11091,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1858:6:23"
            },
            "scope": 11388,
            "src": "1817:120:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11135,
              "nodeType": "Block",
              "src": "1966:146:23",
              "statements": [
                {
                  "assignments": [
                    11113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11113,
                      "name": "_bal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11135,
                      "src": "1976:9:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11112,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1976:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11116,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11114,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11109,
                      "src": "1988:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:11:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1976:23:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11120,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10953,
                        "src": "2028:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11121,
                        "name": "_bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11113,
                        "src": "2040:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11117,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10943,
                        "src": "2009:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11677,
                      "src": "2009:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11457_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11457_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11123,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:36:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11130,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10943,
                            "src": "2092:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11457",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$11457",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 11129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2084:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2084:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 11131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2084:14:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11132,
                        "name": "_bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11113,
                        "src": "2100:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11125,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10953,
                            "src": "2067:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11124,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2055:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$42_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 11126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2055:23:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$42",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 11127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "earn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "2055:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 11133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11134,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:50:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d389800f",
            "id": 11136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:2:23"
            },
            "returnParameters": {
              "id": 11111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1966:0:23"
            },
            "scope": 11388,
            "src": "1943:169:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11147,
              "nodeType": "Block",
              "src": "2149:53:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11142,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2183:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2183:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 11140,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10943,
                            "src": "2167:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11457",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 11141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11402,
                          "src": "2167:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 11144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2167:27:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11139,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11231,
                      "src": "2159:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11146,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:36:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "de5f6268",
            "id": 11148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:2:23"
            },
            "returnParameters": {
              "id": 11138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:0:23"
            },
            "scope": 11388,
            "src": "2118:84:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11230,
              "nodeType": "Block",
              "src": "2246:512:23",
              "statements": [
                {
                  "assignments": [
                    11154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11154,
                      "name": "_pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11230,
                      "src": "2256:10:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11153,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2256:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11157,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11155,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11035,
                      "src": "2269:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2269:9:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2256:22:23"
                },
                {
                  "assignments": [
                    11159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11159,
                      "name": "_before",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11230,
                      "src": "2288:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11158,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2288:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11167,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11164,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2327:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          ],
                          "id": 11163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2319:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2319:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 11165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2319:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11160,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10943,
                        "src": "2303:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11402,
                      "src": "2303:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2288:45:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2366:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2366:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11175,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2386:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          ],
                          "id": 11174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2378:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11173,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2378:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 11176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2378:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11177,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11150,
                        "src": "2393:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11168,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10943,
                        "src": "2343:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11702,
                      "src": "2343:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11457_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11457_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 11178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2343:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11179,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:58:23"
                },
                {
                  "assignments": [
                    11181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11181,
                      "name": "_after",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11230,
                      "src": "2411:11:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11180,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2411:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11186,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2449:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          ],
                          "id": 11185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2441:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2441:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 11187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2441:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11182,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10943,
                        "src": "2425:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11402,
                      "src": "2425:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2411:44:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11190,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11150,
                      "src": "2465:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11193,
                          "name": "_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11159,
                          "src": "2486:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 11191,
                          "name": "_after",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11181,
                          "src": "2475:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11500,
                        "src": "2475:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 11194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2475:19:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2465:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11196,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:29:23"
                },
                {
                  "assignments": [
                    11198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11198,
                      "name": "shares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11230,
                      "src": "2548:11:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11197,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2548:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11200,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 11199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2562:1:23",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2548:15:23"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11201,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12369,
                        "src": "2577:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 11202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2577:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 11203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2594:1:23",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2577:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11222,
                    "nodeType": "Block",
                    "src": "2644:73:23",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 11210,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11198,
                            "src": "2658:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11218,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11154,
                                "src": "2700:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 11213,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12369,
                                          "src": "2680:11:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 11214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2680:13:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 11211,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11150,
                                        "src": "2668:7:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 11212,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11561,
                                      "src": "2668:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 11215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2668:26:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 11216,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2667:28:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11577,
                              "src": "2667:32:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 11219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2667:39:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2658:48:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11221,
                        "nodeType": "ExpressionStatement",
                        "src": "2658:48:23"
                      }
                    ]
                  },
                  "id": 11223,
                  "nodeType": "IfStatement",
                  "src": "2573:144:23",
                  "trueBody": {
                    "id": 11209,
                    "nodeType": "Block",
                    "src": "2597:41:23",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 11205,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11198,
                            "src": "2611:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 11206,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11150,
                            "src": "2620:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2611:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11208,
                        "nodeType": "ExpressionStatement",
                        "src": "2611:16:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2732:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2732:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11227,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11198,
                        "src": "2744:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11224,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12650,
                      "src": "2726:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11229,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:25:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6b55f25",
            "id": 11231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11150,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11231,
                  "src": "2225:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11149,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2224:14:23"
            },
            "returnParameters": {
              "id": 11152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:23"
            },
            "scope": 11388,
            "src": "2208:550:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11241,
              "nodeType": "Block",
              "src": "2796:48:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11236,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2825:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2825:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 11235,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12382,
                          "src": "2815:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 11238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2815:21:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11234,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11371,
                      "src": "2806:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:31:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11240,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:31:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "853828b6",
            "id": 11242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2784:2:23"
            },
            "returnParameters": {
              "id": 11233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:23"
            },
            "scope": 11388,
            "src": "2764:80:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11275,
              "nodeType": "Block",
              "src": "2992:176:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11250,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3010:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3010:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11252,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10953,
                          "src": "3024:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3010:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 11254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3036:13:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 11249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3002:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11256,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:48:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11258,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11244,
                          "src": "3068:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11261,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10943,
                              "src": "3087:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$11457",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$11457",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 11260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3079:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11259,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3079:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 11262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3079:14:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3068:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e",
                        "id": 11264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3095:7:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        },
                        "value": "token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        }
                      ],
                      "id": 11257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3060:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3060:43:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11266,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:43:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11271,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10953,
                        "src": "3142:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11272,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "3154:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11268,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11244,
                            "src": "3120:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11267,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11457,
                          "src": "3113:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11457_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 11269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3113:15:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11677,
                      "src": "3113:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11457_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11457_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3113:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11274,
                  "nodeType": "ExpressionStatement",
                  "src": "3113:48:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "018ee9b7",
            "id": 11276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11244,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11276,
                  "src": "2953:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11246,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11276,
                  "src": "2970:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11245,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2952:30:23"
            },
            "returnParameters": {
              "id": 11248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2992:0:23"
            },
            "scope": 11388,
            "src": "2936:232:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11370,
              "nodeType": "Block",
              "src": "3280:550:23",
              "statements": [
                {
                  "assignments": [
                    11282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11282,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11370,
                      "src": "3290:6:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11281,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3290:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11293,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11290,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12369,
                          "src": "3328:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 11291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3328:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11286,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11278,
                                "src": "3314:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 11283,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11035,
                                  "src": "3300:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 11284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3300:9:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11561,
                              "src": "3300:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 11287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3300:22:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11288,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3299:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11577,
                      "src": "3299:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:43:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3290:52:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3358:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3358:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11297,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11278,
                        "src": "3370:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11294,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12705,
                      "src": "3352:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:26:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11299,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:26:23"
                },
                {
                  "assignments": [
                    11301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11301,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11370,
                      "src": "3414:6:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11300,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3414:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11309,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11306,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3447:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yVault_$11388",
                              "typeString": "contract yVault"
                            }
                          ],
                          "id": 11305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3439:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3439:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 11307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3439:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11302,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10943,
                        "src": "3423:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11402,
                      "src": "3423:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3414:39:23"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11310,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11301,
                      "src": "3467:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 11311,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11282,
                      "src": "3471:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3467:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11361,
                  "nodeType": "IfStatement",
                  "src": "3463:317:23",
                  "trueBody": {
                    "id": 11360,
                    "nodeType": "Block",
                    "src": "3474:306:23",
                    "statements": [
                      {
                        "assignments": [
                          11314
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11314,
                            "name": "_withdraw",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 11360,
                            "src": "3488:14:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11313,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3488:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 11319,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11317,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "3511:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 11315,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11282,
                              "src": "3505:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11500,
                            "src": "3505:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3505:8:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3488:25:23"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 11326,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10943,
                                  "src": "3568:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$11457",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$11457",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 11325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3560:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11324,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3560:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 11327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3560:14:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11328,
                              "name": "_withdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11314,
                              "src": "3576:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 11321,
                                  "name": "controller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10953,
                                  "src": "3539:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11320,
                                "name": "IController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3527:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IController_$42_$",
                                  "typeString": "type(contract IController)"
                                }
                              },
                              "id": 11322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3527:23:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IController_$42",
                                "typeString": "contract IController"
                              }
                            },
                            "id": 11323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "3527:32:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 11329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3527:59:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11330,
                        "nodeType": "ExpressionStatement",
                        "src": "3527:59:23"
                      },
                      {
                        "assignments": [
                          11332
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11332,
                            "name": "_after",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 11360,
                            "src": "3600:11:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11331,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3600:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 11340,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 11337,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3638:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_yVault_$11388",
                                    "typeString": "contract yVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_yVault_$11388",
                                    "typeString": "contract yVault"
                                  }
                                ],
                                "id": 11336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3630:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11335,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3630:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 11338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3630:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 11333,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10943,
                              "src": "3614:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$11457",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 11334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11402,
                            "src": "3614:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 11339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3614:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3600:44:23"
                      },
                      {
                        "assignments": [
                          11342
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11342,
                            "name": "_diff",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 11360,
                            "src": "3658:10:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11341,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3658:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 11347,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11345,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "3682:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 11343,
                              "name": "_after",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11332,
                              "src": "3671:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11500,
                            "src": "3671:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3671:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3658:26:23"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 11348,
                            "name": "_diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11342,
                            "src": "3702:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 11349,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11314,
                            "src": "3710:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3702:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 11359,
                        "nodeType": "IfStatement",
                        "src": "3698:72:23",
                        "trueBody": {
                          "id": 11358,
                          "nodeType": "Block",
                          "src": "3721:49:23",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 11356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 11351,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11282,
                                  "src": "3739:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 11354,
                                      "name": "_diff",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11342,
                                      "src": "3749:5:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 11352,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11301,
                                      "src": "3743:1:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 11353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11484,
                                    "src": "3743:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 11355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3743:12:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3739:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11357,
                              "nodeType": "ExpressionStatement",
                              "src": "3739:16:23"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3809:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3809:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11367,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11282,
                        "src": "3821:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11362,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10943,
                        "src": "3790:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11457",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11677,
                      "src": "3790:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11457_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11457_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11369,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:33:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 11371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11278,
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11371,
                  "src": "3259:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3258:14:23"
            },
            "returnParameters": {
              "id": 11280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3280:0:23"
            },
            "scope": 11388,
            "src": "3241:589:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11386,
              "nodeType": "Block",
              "src": "3895:62:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11382,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12369,
                          "src": "3936:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 11383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3936:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 11379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3926:4:23",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11376,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11035,
                              "src": "3912:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3912:9:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11561,
                          "src": "3912:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 11380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3912:19:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11577,
                      "src": "3912:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:38:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11375,
                  "id": 11385,
                  "nodeType": "Return",
                  "src": "3905:45:23"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77c7b8fc",
            "id": 11387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3865:2:23"
            },
            "returnParameters": {
              "id": 11375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11374,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11387,
                  "src": "3889:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3888:6:23"
            },
            "scope": 11388,
            "src": "3836:121:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11389,
        "src": "415:3544:23"
      }
    ],
    "src": "32:3928:23"
  },
  "bytecode": "608060405261251c6006553480156200001757600080fd5b50604051620021bb380380620021bb833981810160405260408110156200003d57600080fd5b508051602090910151604080516306fdde0360e01b815290516001600160a01b038416916306fdde03916004808301926000929190829003018186803b1580156200008757600080fd5b505afa1580156200009c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015620000c657600080fd5b8101908080516040519392919084640100000000821115620000e757600080fd5b908301906020820185811115620000fd57600080fd5b82516401000000008111828201881017156200011857600080fd5b82525081516020918201929091019080838360005b83811015620001475781810151838201526020016200012d565b50505050905090810190601f168015620001755780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806503cb2b0b937160d51b81525060060182805190602001908083835b60208310620001c15780518252601f199092019160209182019101620001a0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200022f57600080fd5b505afa15801562000244573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200026e57600080fd5b81019080805160405193929190846401000000008211156200028f57600080fd5b908301906020820185811115620002a557600080fd5b8251640100000000811182820188101715620002c057600080fd5b82525081516020918201929091019080838360005b83811015620002ef578181015183820152602001620002d5565b50505050905090810190601f1680156200031d5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080607960f81b81525060010182805190602001908083835b60208310620003645780518252601f19909201916020918201910162000343565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528160039080519060200190620003b0929190620004ba565b508051620003c6906004906020840190620004ba565b50506005805460ff19166012179055506040805163313ce56760e01b815290516200045a916001600160a01b0385169163313ce56791600480820192602092909190829003018186803b1580156200041d57600080fd5b505afa15801562000432573d6000803e3d6000fd5b505050506040513d60208110156200044957600080fd5b50516001600160e01b03620004a416565b60058054610100600160a81b0319166101006001600160a01b039485160217905560078054336001600160a01b03199182161790915560088054909116919092161790556200055f565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004fd57805160ff19168380011785556200052d565b828001600101855582156200052d579182015b828111156200052d57825182559160200191906001019062000510565b506200053b9291506200053f565b5090565b6200055c91905b808211156200053b576000815560010162000546565b90565b611c4c806200056f6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063853828b6116100f9578063b6b55f2511610097578063de5f626811610071578063de5f6268146104f9578063f77c479114610501578063f889794514610509578063fc0c546a14610511576101c4565b8063b6b55f25146104a6578063d389800f146104c3578063dd62ed3e146104cb576101c4565b8063a457c2d7116100d3578063a457c2d714610420578063a9059cbb1461044c578063ab033ea914610478578063b69ef8a81461049e576101c4565b8063853828b6146103ea57806392eefe9b146103f257806395d89b4114610418576101c4565b806339509351116101665780635aa6e675116101405780635aa6e675146103905780636ac5db19146103b457806370a08231146103bc57806377c7b8fc146103e2576101c4565b8063395093511461033f57806345dc3dd81461036b57806348a0d75414610388576101c4565b806318160ddd116101a257806318160ddd146102b457806323b872dd146102ce5780632e1a7d4d14610304578063313ce56714610321576101c4565b8063018ee9b7146101c957806306fdde03146101f7578063095ea7b314610274575b600080fd5b6101f5600480360360408110156101df57600080fd5b506001600160a01b038135169060200135610519565b005b6101ff6105da565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610239578181015183820152602001610221565b50505050905090810190601f1680156102665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a06004803603604081101561028a57600080fd5b506001600160a01b038135169060200135610670565b604080519115158252519081900360200190f35b6102bc61068e565b60408051918252519081900360200190f35b6102a0600480360360608110156102e457600080fd5b506001600160a01b03813581169160208101359091169060400135610694565b6101f56004803603602081101561031a57600080fd5b5035610721565b610329610940565b6040805160ff9092168252519081900360200190f35b6102a06004803603604081101561035557600080fd5b506001600160a01b038135169060200135610949565b6101f56004803603602081101561038157600080fd5b503561099d565b6102bc6109ef565b610398610aa5565b604080516001600160a01b039092168252519081900360200190f35b6102bc610ab4565b6102bc600480360360208110156103d257600080fd5b50356001600160a01b0316610aba565b6102bc610ad5565b6101f5610af6565b6101f56004803603602081101561040857600080fd5b50356001600160a01b0316610b09565b6101ff610b78565b6102a06004803603604081101561043657600080fd5b506001600160a01b038135169060200135610bd9565b6102a06004803603604081101561046257600080fd5b506001600160a01b038135169060200135610c47565b6101f56004803603602081101561048e57600080fd5b50356001600160a01b0316610c5b565b6102bc610cca565b6101f5600480360360208110156104bc57600080fd5b5035610dd6565b6101f5610f56565b6102bc600480360360408110156104e157600080fd5b506001600160a01b0381358116916020013516610ffc565b6101f5611027565b6103986110a9565b6102bc6110b8565b6103986110be565b6008546001600160a01b03163314610566576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6005546001600160a01b038381166101009092041614156105b6576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b6008546105d6906001600160a01b0384811691168363ffffffff6110d216565b5050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106665780601f1061063b57610100808354040283529160200191610666565b820191906000526020600020905b81548152906001019060200180831161064957829003601f168201915b5050505050905090565b600061068461067d611124565b8484611128565b5060015b92915050565b60025490565b60006106a1848484611214565b610717846106ad611124565b61071285604051806060016040528060288152602001611b36602891396001600160a01b038a166000908152600160205260408120906106eb611124565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61137b16565b611128565b5060019392505050565b600061075261072e61068e565b6107468461073a610cca565b9063ffffffff61141216565b9063ffffffff61147216565b905061075e33836114b4565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107ae57600080fd5b505afa1580156107c2573d6000803e3d6000fd5b505050506040513d60208110156107d857600080fd5b505190508181101561091f5760006107f6838363ffffffff6115bc16565b6008546005546040805163f3fef3a360e01b81526001600160a01b036101009093048316600482015260248101859052905193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600094506101009092046001600160a01b031692506370a08231916024808301926020929190829003018186803b1580156108be57600080fd5b505afa1580156108d2573d6000803e3d6000fd5b505050506040513d60208110156108e857600080fd5b5051905060006108fe828563ffffffff6115bc16565b90508281101561091b57610918848263ffffffff6115fe16565b94505b5050505b60055461093b9061010090046001600160a01b031633846110d2565b505050565b60055460ff1690565b6000610684610956611124565b846107128560016000610967611124565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6115fe16565b6007546001600160a01b031633146109ea576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600655565b6000610aa0612710610746600654600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610a6857600080fd5b505afa158015610a7c573d6000803e3d6000fd5b505050506040513d6020811015610a9257600080fd5b50519063ffffffff61141216565b905090565b6007546001600160a01b031681565b61271081565b6001600160a01b031660009081526020819052604090205490565b6000610aa0610ae261068e565b610746670de0b6b3a764000061073a610cca565b610b07610b0233610aba565b610721565b565b6007546001600160a01b03163314610b56576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106665780601f1061063b57610100808354040283529160200191610666565b6000610684610be6611124565b8461071285604051806060016040528060258152602001611bf26025913960016000610c10611124565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61137b16565b6000610684610c54611124565b8484611214565b6007546001600160a01b03163314610ca8576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854600554604080516370a0823160e01b81526001600160a01b03610100909304831660048201529051600093610aa09316916370a08231916024808301926020929190829003018186803b158015610d2357600080fd5b505afa158015610d37573d6000803e3d6000fd5b505050506040513d6020811015610d4d57600080fd5b5051600554604080516370a0823160e01b815230600482015290516101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d6020811015610dc857600080fd5b50519063ffffffff6115fe16565b6000610de0610cca565b600554604080516370a0823160e01b815230600482015290519293506000926101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b158015610e3557600080fd5b505afa158015610e49573d6000803e3d6000fd5b505050506040513d6020811015610e5f57600080fd5b5051600554909150610e819061010090046001600160a01b0316333086611658565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610ed157600080fd5b505afa158015610ee5573d6000803e3d6000fd5b505050506040513d6020811015610efb57600080fd5b50519050610f0f818363ffffffff6115bc16565b93506000610f1b61068e565b610f26575083610f45565b610f4284610746610f3561068e565b889063ffffffff61141216565b90505b610f4f33826116b8565b5050505050565b6000610f606109ef565b600854600554919250610f8b9161010090046001600160a01b0390811691168363ffffffff6110d216565b6008546005546040805163b02bf4b960e01b81526101009092046001600160a01b03908116600484015260248301859052905192169163b02bf4b99160448082019260009290919082900301818387803b158015610fe857600080fd5b505af1158015610f4f573d6000803e3d6000fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554604080516370a0823160e01b81523360048201529051610b079261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561107857600080fd5b505afa15801561108c573d6000803e3d6000fd5b505050506040513d60208110156110a257600080fd5b5051610dd6565b6008546001600160a01b031681565b60065481565b60055461010090046001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261093b9084906117b4565b3390565b6001600160a01b03831661116d5760405162461bcd60e51b8152600401808060200182810382526024815260200180611ba46024913960400191505060405180910390fd5b6001600160a01b0382166111b25760405162461bcd60e51b8152600401808060200182810382526022815260200180611acd6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166112595760405162461bcd60e51b8152600401808060200182810382526025815260200180611b7f6025913960400191505060405180910390fd5b6001600160a01b03821661129e5760405162461bcd60e51b8152600401808060200182810382526023815260200180611a886023913960400191505060405180910390fd5b6112a983838361093b565b6112ec81604051806060016040528060268152602001611aef602691396001600160a01b038616600090815260208190526040902054919063ffffffff61137b16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611321908263ffffffff6115fe16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561140a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113cf5781810151838201526020016113b7565b50505050905090810190601f1680156113fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008261142157506000610688565b8282028284828161142e57fe5b041461146b5760405162461bcd60e51b8152600401808060200182810382526021815260200180611b156021913960400191505060405180910390fd5b9392505050565b600061146b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611865565b6001600160a01b0382166114f95760405162461bcd60e51b8152600401808060200182810382526021815260200180611b5e6021913960400191505060405180910390fd5b6115058260008361093b565b61154881604051806060016040528060228152602001611aab602291396001600160a01b038516600090815260208190526040902054919063ffffffff61137b16565b6001600160a01b038316600090815260208190526040902055600254611574908263ffffffff6115bc16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600061146b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061137b565b60008282018381101561146b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116b29085906117b4565b50505050565b6001600160a01b038216611713576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61171f6000838361093b565b600254611732908263ffffffff6115fe16565b6002556001600160a01b03821660009081526020819052604090205461175e908263ffffffff6115fe16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6060611809826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118ca9092919063ffffffff16565b80519091501561093b5780806020019051602081101561182857600080fd5b505161093b5760405162461bcd60e51b815260040180806020018281038252602a815260200180611bc8602a913960400191505060405180910390fd5b600081836118b45760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156113cf5781810151838201526020016113b7565b5060008385816118c057fe5b0495945050505050565b60606118d984846000856118e1565b949350505050565b60606118ec85611a4e565b61193d576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061197c5780518252601f19909201916020918201910161195d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146119de576040519150601f19603f3d011682016040523d82523d6000602084013e6119e3565b606091505b509150915081156119f75791506118d99050565b805115611a075780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156113cf5781810151838201526020016113b7565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906118d957505015159291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a9154a90533a0bd29aab929c9b6d34fe5dc49bc213c670150464c5b10e52816664736f6c63430006020033",
  "bytecodeSha1": "ae50e52f7000b60176ab31169d7b4d247d6a6753",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.2"
  },
  "contractName": "yVault",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "97": [
            986,
            992,
            true
          ]
        },
        "SafeMath.div": {
          "98": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "95": [
            2479,
            2485,
            false
          ],
          "96": [
            2565,
            2575,
            true
          ]
        },
        "SafeMath.sub": {
          "94": [
            1859,
            1865,
            true
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "86": [
            9460,
            9479,
            true
          ],
          "87": [
            9538,
            9559,
            true
          ]
        },
        "ERC20._burn": {
          "90": [
            8607,
            8628,
            true
          ]
        },
        "ERC20._mint": {
          "91": [
            7918,
            7939,
            true
          ]
        },
        "ERC20._transfer": {
          "88": [
            7140,
            7160,
            true
          ],
          "89": [
            7220,
            7243,
            true
          ]
        }
      },
      "23": {
        "yVault.harvest": {
          "76": [
            3010,
            3034,
            true
          ],
          "77": [
            3068,
            3093,
            true
          ]
        },
        "yVault.setController": {
          "81": [
            1588,
            1612,
            true
          ]
        },
        "yVault.setGovernance": {
          "82": [
            1432,
            1456,
            true
          ]
        },
        "yVault.setMin": {
          "80": [
            1290,
            1314,
            true
          ]
        },
        "yVault.withdraw": {
          "78": [
            3467,
            3472,
            false
          ],
          "79": [
            3702,
            3719,
            false
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "92": [
            3487,
            3508,
            false
          ],
          "93": [
            3616,
            3646,
            true
          ]
        }
      },
      "5": {
        "Address._functionCallWithValue": {
          "83": [
            5279,
            5297,
            true
          ],
          "84": [
            5493,
            5500,
            false
          ],
          "85": [
            5634,
            5655,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "40": [
            670,
            687
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "62": [
            978,
            1024
          ]
        },
        "SafeMath.div": {
          "55": [
            3178,
            3224
          ],
          "70": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "52": [
            2501,
            2509
          ],
          "53": [
            2557,
            2613
          ],
          "54": [
            2624,
            2632
          ]
        },
        "SafeMath.sub": {
          "51": [
            1851,
            1880
          ],
          "61": [
            1398,
            1448
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "41": [
            9452,
            9520
          ],
          "42": [
            9530,
            9598
          ],
          "43": [
            9609,
            9645
          ],
          "44": [
            9655,
            9692
          ]
        },
        "ERC20._burn": {
          "56": [
            8599,
            8666
          ],
          "57": [
            8677,
            8726
          ],
          "58": [
            8737,
            8826
          ],
          "59": [
            8836,
            8875
          ],
          "60": [
            8885,
            8927
          ]
        },
        "ERC20._mint": {
          "64": [
            7910,
            7975
          ],
          "65": [
            7986,
            8035
          ],
          "66": [
            8046,
            8085
          ],
          "67": [
            8095,
            8146
          ],
          "68": [
            8156,
            8198
          ]
        },
        "ERC20._transfer": {
          "45": [
            7132,
            7202
          ],
          "46": [
            7212,
            7283
          ],
          "47": [
            7294,
            7341
          ],
          "48": [
            7352,
            7443
          ],
          "49": [
            7453,
            7508
          ],
          "50": [
            7518,
            7558
          ]
        },
        "ERC20.allowance": {
          "37": [
            4076,
            4110
          ]
        },
        "ERC20.approve": {
          "4": [
            4354,
            4393
          ],
          "5": [
            4403,
            4414
          ]
        },
        "ERC20.balanceOf": {
          "19": [
            3503,
            3528
          ]
        },
        "ERC20.decimals": {
          "14": [
            3179,
            3195
          ]
        },
        "ERC20.decreaseAllowance": {
          "25": [
            6404,
            6533
          ]
        },
        "ERC20.increaseAllowance": {
          "15": [
            5697,
            5780
          ]
        },
        "ERC20.name": {
          "3": [
            2281,
            2293
          ]
        },
        "ERC20.symbol": {
          "24": [
            2477,
            2491
          ]
        },
        "ERC20.totalSupply": {
          "6": [
            3334,
            3353
          ]
        },
        "ERC20.transfer": {
          "26": [
            3840,
            3882
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            5003,
            5039
          ],
          "8": [
            5049,
            5170
          ],
          "9": [
            5180,
            5191
          ]
        }
      },
      "23": {
        "yVault.available": {
          "18": [
            1875,
            1930
          ]
        },
        "yVault.balance": {
          "29": [
            1114,
            1223
          ]
        },
        "yVault.deposit": {
          "30": [
            2343,
            2401
          ],
          "31": [
            2465,
            2494
          ],
          "32": [
            2611,
            2627
          ],
          "33": [
            2658,
            2706
          ],
          "34": [
            2726,
            2751
          ]
        },
        "yVault.depositAll": {
          "38": [
            2159,
            2195
          ]
        },
        "yVault.earn": {
          "35": [
            2009,
            2045
          ],
          "36": [
            2055,
            2105
          ]
        },
        "yVault.getPricePerFullShare": {
          "20": [
            3905,
            3950
          ]
        },
        "yVault.harvest": {
          "0": [
            3002,
            3050
          ],
          "1": [
            3060,
            3103
          ],
          "2": [
            3113,
            3161
          ]
        },
        "yVault.setController": {
          "22": [
            1580,
            1628
          ],
          "23": [
            1638,
            1662
          ]
        },
        "yVault.setGovernance": {
          "27": [
            1424,
            1472
          ],
          "28": [
            1482,
            1506
          ]
        },
        "yVault.setMin": {
          "16": [
            1282,
            1330
          ],
          "17": [
            1340,
            1350
          ]
        },
        "yVault.withdraw": {
          "10": [
            3352,
            3378
          ],
          "11": [
            3527,
            3586
          ],
          "12": [
            3739,
            3755
          ],
          "13": [
            3790,
            3823
          ]
        },
        "yVault.withdrawAll": {
          "21": [
            2806,
            2837
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "69": [
            3608,
            3693
          ]
        },
        "SafeERC20.safeTransfer": {
          "39": [
            778,
            864
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "63": [
            977,
            1073
          ]
        }
      },
      "5": {
        "Address._functionCallWithValue": {
          "72": [
            5271,
            5331
          ],
          "73": [
            5516,
            5533
          ],
          "74": [
            6024,
            6044
          ]
        },
        "Address.functionCall": {
          "71": [
            3897,
            3957
          ]
        },
        "Address.isContract": {
          "75": [
            1270,
            1321
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC20",
    "IERC20",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c8063853828b6116100f9578063b6b55f2511610097578063de5f626811610071578063de5f6268146104f9578063f77c479114610501578063f889794514610509578063fc0c546a14610511576101c4565b8063b6b55f25146104a6578063d389800f146104c3578063dd62ed3e146104cb576101c4565b8063a457c2d7116100d3578063a457c2d714610420578063a9059cbb1461044c578063ab033ea914610478578063b69ef8a81461049e576101c4565b8063853828b6146103ea57806392eefe9b146103f257806395d89b4114610418576101c4565b806339509351116101665780635aa6e675116101405780635aa6e675146103905780636ac5db19146103b457806370a08231146103bc57806377c7b8fc146103e2576101c4565b8063395093511461033f57806345dc3dd81461036b57806348a0d75414610388576101c4565b806318160ddd116101a257806318160ddd146102b457806323b872dd146102ce5780632e1a7d4d14610304578063313ce56714610321576101c4565b8063018ee9b7146101c957806306fdde03146101f7578063095ea7b314610274575b600080fd5b6101f5600480360360408110156101df57600080fd5b506001600160a01b038135169060200135610519565b005b6101ff6105da565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610239578181015183820152602001610221565b50505050905090810190601f1680156102665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a06004803603604081101561028a57600080fd5b506001600160a01b038135169060200135610670565b604080519115158252519081900360200190f35b6102bc61068e565b60408051918252519081900360200190f35b6102a0600480360360608110156102e457600080fd5b506001600160a01b03813581169160208101359091169060400135610694565b6101f56004803603602081101561031a57600080fd5b5035610721565b610329610940565b6040805160ff9092168252519081900360200190f35b6102a06004803603604081101561035557600080fd5b506001600160a01b038135169060200135610949565b6101f56004803603602081101561038157600080fd5b503561099d565b6102bc6109ef565b610398610aa5565b604080516001600160a01b039092168252519081900360200190f35b6102bc610ab4565b6102bc600480360360208110156103d257600080fd5b50356001600160a01b0316610aba565b6102bc610ad5565b6101f5610af6565b6101f56004803603602081101561040857600080fd5b50356001600160a01b0316610b09565b6101ff610b78565b6102a06004803603604081101561043657600080fd5b506001600160a01b038135169060200135610bd9565b6102a06004803603604081101561046257600080fd5b506001600160a01b038135169060200135610c47565b6101f56004803603602081101561048e57600080fd5b50356001600160a01b0316610c5b565b6102bc610cca565b6101f5600480360360208110156104bc57600080fd5b5035610dd6565b6101f5610f56565b6102bc600480360360408110156104e157600080fd5b506001600160a01b0381358116916020013516610ffc565b6101f5611027565b6103986110a9565b6102bc6110b8565b6103986110be565b6008546001600160a01b03163314610566576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6005546001600160a01b038381166101009092041614156105b6576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b6008546105d6906001600160a01b0384811691168363ffffffff6110d216565b5050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106665780601f1061063b57610100808354040283529160200191610666565b820191906000526020600020905b81548152906001019060200180831161064957829003601f168201915b5050505050905090565b600061068461067d611124565b8484611128565b5060015b92915050565b60025490565b60006106a1848484611214565b610717846106ad611124565b61071285604051806060016040528060288152602001611b36602891396001600160a01b038a166000908152600160205260408120906106eb611124565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61137b16565b611128565b5060019392505050565b600061075261072e61068e565b6107468461073a610cca565b9063ffffffff61141216565b9063ffffffff61147216565b905061075e33836114b4565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107ae57600080fd5b505afa1580156107c2573d6000803e3d6000fd5b505050506040513d60208110156107d857600080fd5b505190508181101561091f5760006107f6838363ffffffff6115bc16565b6008546005546040805163f3fef3a360e01b81526001600160a01b036101009093048316600482015260248101859052905193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600094506101009092046001600160a01b031692506370a08231916024808301926020929190829003018186803b1580156108be57600080fd5b505afa1580156108d2573d6000803e3d6000fd5b505050506040513d60208110156108e857600080fd5b5051905060006108fe828563ffffffff6115bc16565b90508281101561091b57610918848263ffffffff6115fe16565b94505b5050505b60055461093b9061010090046001600160a01b031633846110d2565b505050565b60055460ff1690565b6000610684610956611124565b846107128560016000610967611124565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6115fe16565b6007546001600160a01b031633146109ea576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600655565b6000610aa0612710610746600654600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610a6857600080fd5b505afa158015610a7c573d6000803e3d6000fd5b505050506040513d6020811015610a9257600080fd5b50519063ffffffff61141216565b905090565b6007546001600160a01b031681565b61271081565b6001600160a01b031660009081526020819052604090205490565b6000610aa0610ae261068e565b610746670de0b6b3a764000061073a610cca565b610b07610b0233610aba565b610721565b565b6007546001600160a01b03163314610b56576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106665780601f1061063b57610100808354040283529160200191610666565b6000610684610be6611124565b8461071285604051806060016040528060258152602001611bf26025913960016000610c10611124565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61137b16565b6000610684610c54611124565b8484611214565b6007546001600160a01b03163314610ca8576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854600554604080516370a0823160e01b81526001600160a01b03610100909304831660048201529051600093610aa09316916370a08231916024808301926020929190829003018186803b158015610d2357600080fd5b505afa158015610d37573d6000803e3d6000fd5b505050506040513d6020811015610d4d57600080fd5b5051600554604080516370a0823160e01b815230600482015290516101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d6020811015610dc857600080fd5b50519063ffffffff6115fe16565b6000610de0610cca565b600554604080516370a0823160e01b815230600482015290519293506000926101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b158015610e3557600080fd5b505afa158015610e49573d6000803e3d6000fd5b505050506040513d6020811015610e5f57600080fd5b5051600554909150610e819061010090046001600160a01b0316333086611658565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610ed157600080fd5b505afa158015610ee5573d6000803e3d6000fd5b505050506040513d6020811015610efb57600080fd5b50519050610f0f818363ffffffff6115bc16565b93506000610f1b61068e565b610f26575083610f45565b610f4284610746610f3561068e565b889063ffffffff61141216565b90505b610f4f33826116b8565b5050505050565b6000610f606109ef565b600854600554919250610f8b9161010090046001600160a01b0390811691168363ffffffff6110d216565b6008546005546040805163b02bf4b960e01b81526101009092046001600160a01b03908116600484015260248301859052905192169163b02bf4b99160448082019260009290919082900301818387803b158015610fe857600080fd5b505af1158015610f4f573d6000803e3d6000fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554604080516370a0823160e01b81523360048201529051610b079261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561107857600080fd5b505afa15801561108c573d6000803e3d6000fd5b505050506040513d60208110156110a257600080fd5b5051610dd6565b6008546001600160a01b031681565b60065481565b60055461010090046001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261093b9084906117b4565b3390565b6001600160a01b03831661116d5760405162461bcd60e51b8152600401808060200182810382526024815260200180611ba46024913960400191505060405180910390fd5b6001600160a01b0382166111b25760405162461bcd60e51b8152600401808060200182810382526022815260200180611acd6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166112595760405162461bcd60e51b8152600401808060200182810382526025815260200180611b7f6025913960400191505060405180910390fd5b6001600160a01b03821661129e5760405162461bcd60e51b8152600401808060200182810382526023815260200180611a886023913960400191505060405180910390fd5b6112a983838361093b565b6112ec81604051806060016040528060268152602001611aef602691396001600160a01b038616600090815260208190526040902054919063ffffffff61137b16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611321908263ffffffff6115fe16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561140a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113cf5781810151838201526020016113b7565b50505050905090810190601f1680156113fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008261142157506000610688565b8282028284828161142e57fe5b041461146b5760405162461bcd60e51b8152600401808060200182810382526021815260200180611b156021913960400191505060405180910390fd5b9392505050565b600061146b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611865565b6001600160a01b0382166114f95760405162461bcd60e51b8152600401808060200182810382526021815260200180611b5e6021913960400191505060405180910390fd5b6115058260008361093b565b61154881604051806060016040528060228152602001611aab602291396001600160a01b038516600090815260208190526040902054919063ffffffff61137b16565b6001600160a01b038316600090815260208190526040902055600254611574908263ffffffff6115bc16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600061146b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061137b565b60008282018381101561146b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116b29085906117b4565b50505050565b6001600160a01b038216611713576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61171f6000838361093b565b600254611732908263ffffffff6115fe16565b6002556001600160a01b03821660009081526020819052604090205461175e908263ffffffff6115fe16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6060611809826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118ca9092919063ffffffff16565b80519091501561093b5780806020019051602081101561182857600080fd5b505161093b5760405162461bcd60e51b815260040180806020018281038252602a815260200180611bc8602a913960400191505060405180910390fd5b600081836118b45760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156113cf5781810151838201526020016113b7565b5060008385816118c057fe5b0495945050505050565b60606118d984846000856118e1565b949350505050565b60606118ec85611a4e565b61193d576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061197c5780518252601f19909201916020918201910161195d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146119de576040519150601f19603f3d011682016040523d82523d6000602084013e6119e3565b606091505b509150915081156119f75791506118d99050565b805115611a075780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156113cf5781810151838201526020016113b7565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906118d957505015159291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a9154a90533a0bd29aab929c9b6d34fe5dc49bc213c670150464c5b10e52816664736f6c63430006020033",
  "deployedSourceMap": "415:3544:23:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:3544:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2936:232;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2936:232:23;;;;;;;;:::i;:::-;;2219:81:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2219:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4255:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;4881:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4881:317:2;;;;;;;;;;;;;;;;;:::i;3241:589:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3241:589:23;;:::i;3121:81:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5593:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5593:215:2;;;;;;;;:::i;1236:121:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1236:121:23;;:::i;1817:120::-;;;:::i;635:25::-;;;:::i;:::-;;;;-1:-1:-1;;;;;635:25:23;;;;;;;;;;;;;;596:32;;;:::i;3418:117:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3418:117:2;-1:-1:-1;;;;;3418:117:2;;:::i;3836:121:23:-;;;:::i;2764:80::-;;;:::i;1519:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1519:150:23;-1:-1:-1;;;;;1519:150:23;;:::i;2413:85:2:-;;;:::i;6295:266::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6295:266:2;;;;;;;;:::i;3738:172::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3738:172:2;;;;;;;;:::i;1363:150:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1363:150:23;-1:-1:-1;;;;;1363:150:23;;:::i;1058:172::-;;;:::i;2208:550::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2208:550:23;;:::i;1943:169::-;;;:::i;3968:149:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3968:149:2;;;;;;;;;;:::i;2118:84:23:-;;;:::i;666:25::-;;;:::i;568:22::-;;;:::i;542:19::-;;;:::i;2936:232::-;3024:10;;-1:-1:-1;;;;;3024:10:23;3010;:24;3002:48;;;;;-1:-1:-1;;;3002:48:23;;;;;;;;;;;;-1:-1:-1;;;3002:48:23;;;;;;;;;;;;;;;3087:5;;-1:-1:-1;;;;;3068:25:23;;;3087:5;;;;;3068:25;;3060:43;;;;;-1:-1:-1;;;3060:43:23;;;;;;;;;;;;-1:-1:-1;;;3060:43:23;;;;;;;;;;;;;;;3142:10;;3113:48;;-1:-1:-1;;;;;3113:28:23;;;;3142:10;3154:6;3113:48;:28;:48;:::i;:::-;2936:232;;:::o;2219:81:2:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:2;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:2;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:2;;;;;;;;;;;;-1:-1:-1;5080:33:2;;;:89;;:37;:89;:::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:2;4881:317;;;;;:::o;3241:589:23:-;3290:6;3299:43;3328:13;:11;:13::i;:::-;3300:22;3314:7;3300:9;:7;:9::i;:::-;:13;:22;:13;:22;:::i;:::-;3299:28;:43;:28;:43;:::i;:::-;3290:52;;3352:26;3358:10;3370:7;3352:5;:26::i;:::-;3423:5;;:30;;;-1:-1:-1;;;3423:30:23;;3447:4;3423:30;;;;;;-1:-1:-1;;3423:5:23;;;-1:-1:-1;;;;;3423:5:23;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3423:30:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3423:30:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3423:30:23;;-1:-1:-1;3467:5:23;;;3463:317;;;3488:14;3505:8;:1;3511;3505:8;:5;:8;:::i;:::-;3539:10;;3568:5;;3527:59;;;-1:-1:-1;;;3527:59:23;;-1:-1:-1;;;;;3539:10:23;3568:5;;;;;3527:59;;;;;;;;;;;;;;-1:-1:-1;3539:10:23;;;3527:32;;:59;;;;;-1:-1:-1;;3527:59:23;;;;;;;;-1:-1:-1;3539:10:23;3527:59;;;5:2:-1;;;;30:1;27;20:12;5:2;3527:59:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3614:5:23;;:30;;;-1:-1:-1;;;3614:30:23;;3638:4;3614:30;;;;;;-1:-1:-1;;;3614:5:23;;;;-1:-1:-1;;;;;3614:5:23;;-1:-1:-1;3614:15:23;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3614:30:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3614:30:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3614:30:23;;-1:-1:-1;3658:10:23;3671:13;3614:30;3682:1;3671:13;:10;:13;:::i;:::-;3658:26;;3710:9;3702:5;:17;3698:72;;;3743:12;:1;3749:5;3743:12;:5;:12;:::i;:::-;3739:16;;3698:72;3463:317;;;;3790:5;;:33;;:5;;;-1:-1:-1;;;;;3790:5:23;3809:10;3821:1;3790:18;:33::i;:::-;3241:589;;;:::o;3121:81:2:-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:2;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1236:121:23:-;1304:10;;-1:-1:-1;;;;;1304:10:23;1290;:24;1282:48;;;;;-1:-1:-1;;;1282:48:23;;;;;;;;;;;;-1:-1:-1;;;1282:48:23;;;;;;;;;;;;;;;1340:3;:10;1236:121::o;1817:120::-;1859:4;1882:48;623:5;1882:39;1917:3;;1882:5;;;;;;;;;-1:-1:-1;;;;;1882:5:23;-1:-1:-1;;;;;1882:15:23;;1906:4;1882:30;;;;;;;;;;;;;-1:-1:-1;;;;;1882:30:23;-1:-1:-1;;;;;1882:30:23;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1882:30:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1882:30:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1882:30:23;;:39;:34;:39;:::i;:48::-;1875:55;;1817:120;:::o;635:25::-;;;-1:-1:-1;;;;;635:25:23;;:::o;596:32::-;623:5;596:32;:::o;3418:117:2:-;-1:-1:-1;;;;;3510:18:2;3484:7;3510:18;;;;;;;;;;;;3418:117::o;3836:121:23:-;3889:4;3912:38;3936:13;:11;:13::i;:::-;3912:19;3926:4;3912:9;:7;:9::i;2764:80::-;2806:31;2815:21;2825:10;2815:9;:21::i;:::-;2806:8;:31::i;:::-;2764:80::o;1519:150::-;1602:10;;-1:-1:-1;;;;;1602:10:23;1588;:24;1580:48;;;;;-1:-1:-1;;;1580:48:23;;;;;;;;;;;;-1:-1:-1;;;1580:48:23;;;;;;;;;;;;;;;1638:10;:24;;-1:-1:-1;;;;;;1638:24:23;-1:-1:-1;;;;;1638:24:23;;;;;;;;;;1519:150::o;2413:85:2:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:2;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;1363:150:23:-;1446:10;;-1:-1:-1;;;;;1446:10:23;1432;:24;1424:48;;;;;-1:-1:-1;;;1424:48:23;;;;;;;;;;;;-1:-1:-1;;;1424:48:23;;;;;;;;;;;;;;;1482:10;:24;;-1:-1:-1;;;;;;1482:24:23;-1:-1:-1;;;;;1482:24:23;;;;;;;;;;1363:150::o;1058:172::-;1185:10;;1215:5;;1173:49;;;-1:-1:-1;;;1173:49:23;;-1:-1:-1;;;;;1185:10:23;1215:5;;;;;1173:49;;;;;;-1:-1:-1;;1121:102:23;;1185:10;;1173:33;;:49;;;;;;;;;;;;;;1185:10;1173:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1173:49:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1173:49:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1173:49:23;1121:5;;:30;;;-1:-1:-1;;;1121:30:23;;1145:4;1121:30;;;;;;:5;;;;-1:-1:-1;;;;;1121:5:23;;:15;;:30;;;;;1173:49;;1121:30;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;1121:30:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1121:30:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1121:30:23;;:102;:51;:102;:::i;2208:550::-;2256:10;2269:9;:7;:9::i;:::-;2303:5;;:30;;;-1:-1:-1;;;2303:30:23;;2327:4;2303:30;;;;;;2256:22;;-1:-1:-1;;;2303:5:23;;;;-1:-1:-1;;;;;2303:5:23;;:15;;:30;;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2303:30:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2303:30:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2303:30:23;2343:5;;2303:30;;-1:-1:-1;2343:58:23;;:5;;;-1:-1:-1;;;;;2343:5:23;2366:10;2386:4;2393:7;2343:22;:58::i;:::-;2425:5;;:30;;;-1:-1:-1;;;2425:30:23;;2449:4;2425:30;;;;;;-1:-1:-1;;2425:5:23;;;-1:-1:-1;;;;;2425:5:23;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2425:30:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2425:30:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2425:30:23;;-1:-1:-1;2475:19:23;2425:30;2486:7;2475:19;:10;:19;:::i;:::-;2465:29;-1:-1:-1;2548:11:23;2577:13;:11;:13::i;:::-;2573:144;;-1:-1:-1;2620:7:23;2573:144;;;2667:39;2700:5;2668:26;2680:13;:11;:13::i;:::-;2668:7;;:26;:11;:26;:::i;2667:39::-;2658:48;;2573:144;2726:25;2732:10;2744:6;2726:5;:25::i;:::-;2208:550;;;;;:::o;1943:169::-;1976:9;1988:11;:9;:11::i;:::-;2028:10;;2009:5;;1976:23;;-1:-1:-1;2009:36:23;;2028:10;2009:5;;-1:-1:-1;;;;;2009:5:23;;;;2028:10;1976:23;2009:36;:18;:36;:::i;:::-;2067:10;;2092:5;;2055:50;;;-1:-1:-1;;;2055:50:23;;2067:10;2092:5;;;-1:-1:-1;;;;;2092:5:23;;;2055:50;;;;;;;;;;;;2067:10;;;2055:28;;:50;;;;;2067:10;;2055:50;;;;;;;;2067:10;;2055:50;;;5:2:-1;;;;30:1;27;20:12;5:2;2055:50:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;3968:149:2;-1:-1:-1;;;;;4083:18:2;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;2118:84:23:-;2167:5;;:27;;;-1:-1:-1;;;2167:27:23;;2183:10;2167:27;;;;;;2159:36;;2167:5;;;-1:-1:-1;;;;;2167:5:23;;:15;;:27;;;;;;;;;;;;;;:5;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2167:27:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2167:27:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2167:27:23;2159:7;:36::i;666:25::-;;;-1:-1:-1;;;;;666:25:23;;:::o;568:22::-;;;;:::o;542:19::-;;;;;;-1:-1:-1;;;;;542:19:23;;:::o;696:175:4:-;805:58;;;-1:-1:-1;;;;;805:58:4;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;805:58:4;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;778:86:4;;798:5;;778:19;:86::i;590:104:0:-;677:10;590:104;:::o;9359:340:2:-;-1:-1:-1;;;;;9460:19:2;;9452:68;;;;-1:-1:-1;;;9452:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9538:21:2;;9530:68;;;;-1:-1:-1;;;9530:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9609:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9660:32;;;;;;;;;;;;;;;;;9359:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:2;;7132:70;;;;-1:-1:-1;;;7132:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:2;;7212:71;;;;-1:-1:-1;;;7212:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:2;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7352:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7453:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;;;;;;;;;;7035:530;;;:::o;1746:187:1:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:1;;;1746:187::o;2180:459::-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:1;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2180:459;-1:-1:-1;;;2180:459:1:o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;8524:410:2:-;-1:-1:-1;;;;;8607:21:2;;8599:67;;;;-1:-1:-1;;;8599:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:2;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8737:18:2;;:9;:18;;;;;;;;;;:89;8851:12;;:24;;8868:6;8851:24;:16;:24;:::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:2;;;;;;;;;;;;8524:410;;:::o;1321:134:1:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;877:203:4;1004:68;;;-1:-1:-1;;;;;1004:68:4;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1004:68:4;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;977:96:4;;997:5;;977:19;:96::i;:::-;877:203;;;;:::o;7835:370:2:-;-1:-1:-1;;;;;7918:21:2;;7910:65;;;;;-1:-1:-1;;;7910:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:24;:16;:24;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:2;;:9;:18;;;;;;;;;;;:30;;8139:6;8116:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8095:18:2;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;:9;;8161:37;;;;;;;;;;7835:370;;:::o;2959:751:4:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:4;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:4;3483:221;;3627:10;3616:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3616:30:4;3608:85;;;;-1:-1:-1;;;3608:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3713:272:1;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3818:28:1;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:1:o;3770:194:5:-;3873:12;3904:53;3927:6;3935:4;3941:1;3944:12;3904:22;:53::i;:::-;3897:60;3770:194;-1:-1:-1;;;;3770:194:5:o;5117:958::-;5247:12;5279:18;5290:6;5279:10;:18::i;:::-;5271:60;;;;;-1:-1:-1;;;5271:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:12;5416:23;5443:6;-1:-1:-1;;;;;5443:11:5;5463:8;5474:4;5443:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5443:36:5;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;5401:78:5;;;;5493:7;5489:580;;;5523:10;-1:-1:-1;5516:17:5;;-1:-1:-1;5516:17:5;5489:580;5634:17;;:21;5630:429;;5892:10;5886:17;5952:15;5939:10;5935:2;5931:19;5924:44;5841:145;6024:20;;-1:-1:-1;;;6024:20:5;;;;;;;;;;;;;;;;;6031:12;;6024:20;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;718:610:5;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:5;;;1270:51;-1:-1:-1;;718:610:5:o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    }
  },
  "offset": [
    415,
    3959
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDE5F6268 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDE5F6268 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xF8897945 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x511 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4CB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x49E JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x418 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5AA6E675 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x3E2 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x45DC3DD8 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x388 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x321 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18EE9B7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x274 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x239 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x221 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x266 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x721 JUMP JUMPDEST PUSH2 0x329 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x949 JUMP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x398 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xABA JUMP JUMPDEST PUSH2 0x2BC PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0xB78 JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x2BC PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x566 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x5D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10D2 AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x666 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x666 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x649 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x67D PUSH2 0x1124 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1128 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A1 DUP5 DUP5 DUP5 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x717 DUP5 PUSH2 0x6AD PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x712 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B36 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6EB PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x137B AND JUMP JUMPDEST PUSH2 0x1128 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH2 0x72E PUSH2 0x68E JUMP JUMPDEST PUSH2 0x746 DUP5 PUSH2 0x73A PUSH2 0xCCA JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1412 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1472 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x75E CALLER DUP4 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 PUSH2 0x7F6 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15BC AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xF3FEF3A3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP5 POP PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8FE DUP3 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x15BC AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x91B JUMPI PUSH2 0x918 DUP5 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x15FE AND JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x93B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x10D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x956 PUSH2 0x1124 JUMP JUMPDEST DUP5 PUSH2 0x712 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x967 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15FE AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 PUSH2 0x2710 PUSH2 0x746 PUSH1 0x6 SLOAD PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1412 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 PUSH2 0xAE2 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x746 PUSH8 0xDE0B6B3A7640000 PUSH2 0x73A PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xB07 PUSH2 0xB02 CALLER PUSH2 0xABA JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB56 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x666 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0xBE6 PUSH2 0x1124 JUMP JUMPDEST DUP5 PUSH2 0x712 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BF2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xC10 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x137B AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0xC54 PUSH2 0x1124 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH2 0xAA0 SWAP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15FE AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0xE81 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xF0F DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15BC AND JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0xF1B PUSH2 0x68E JUMP JUMPDEST PUSH2 0xF26 JUMPI POP DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0xF42 DUP5 PUSH2 0x746 PUSH2 0xF35 PUSH2 0x68E JUMP JUMPDEST DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1412 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF4F CALLER DUP3 PUSH2 0x16B8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD SWAP2 SWAP3 POP PUSH2 0xF8B SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10D2 AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB02BF4B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP3 AND SWAP2 PUSH4 0xB02BF4B9 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0xB07 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x93B SWAP1 DUP5 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BA4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ACD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B7F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A88 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A9 DUP4 DUP4 DUP4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x12EC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AEF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x137B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1321 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x15FE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x140A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1421 JUMPI POP PUSH1 0x0 PUSH2 0x688 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x142E JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B15 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B5E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1505 DUP3 PUSH1 0x0 DUP4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x1548 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AAB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x137B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x1574 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x15BC AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x137B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x146B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x16B2 SWAP1 DUP6 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1713 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x171F PUSH1 0x0 DUP4 DUP4 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1732 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x15FE AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x175E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x15FE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1809 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18CA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x93B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BC8 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x13CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B7 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x18C0 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18D9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x18E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x18EC DUP6 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x193D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x197C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x195D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19DE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x19F7 JUMPI SWAP2 POP PUSH2 0x18D9 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A07 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x13CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x18D9 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xA9 ISZERO 0x4A SWAP1 MSTORE8 GASPRICE SIGNEXTEND 0xD2 SWAP11 0xAB SWAP3 SWAP13 SWAP12 PUSH14 0x34FE5DC49BC213C670150464C5B1 0xE MSTORE DUP2 PUSH7 0x64736F6C634300 MOD MUL STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        415,
        3959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        415,
        3959
      ],
      "op": "POP",
      "path": "23"
    },
    "18": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "21": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "LT",
      "path": "23"
    },
    "22": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "29": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "SHR",
      "path": "23"
    },
    "32": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "33": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x853828B6"
    },
    "38": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "39": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "43": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "44": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB6B55F25"
    },
    "49": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "50": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "54": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "55": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDE5F6268"
    },
    "60": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "61": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "65": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "66": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDE5F6268"
    },
    "71": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "72": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4F9"
    },
    "75": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "76": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "77": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF77C4791"
    },
    "82": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "83": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x501"
    },
    "86": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "87": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF8897945"
    },
    "93": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "94": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x509"
    },
    "97": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "98": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "99": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFC0C546A"
    },
    "104": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "105": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x511"
    },
    "108": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "109": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "112": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "113": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "114": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "115": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB6B55F25"
    },
    "120": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "121": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4A6"
    },
    "124": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "125": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "126": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD389800F"
    },
    "131": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "132": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4C3"
    },
    "135": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "136": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "137": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "142": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "143": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4CB"
    },
    "146": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "147": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "150": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "151": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "152": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "153": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "158": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "159": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "163": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "164": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "169": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "170": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x420"
    },
    "173": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "174": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "175": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "180": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "181": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x44C"
    },
    "184": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "185": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "186": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xAB033EA9"
    },
    "191": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "192": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x478"
    },
    "195": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "196": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB69EF8A8"
    },
    "202": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "203": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x49E"
    },
    "206": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "207": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "210": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "211": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "212": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "213": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x853828B6"
    },
    "218": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "219": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3EA"
    },
    "222": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "223": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "224": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x92EEFE9B"
    },
    "229": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F2"
    },
    "233": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "234": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "235": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95D89B41"
    },
    "240": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "241": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x418"
    },
    "244": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "245": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "248": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "249": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "250": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "251": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x39509351"
    },
    "256": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "257": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "261": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "262": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5AA6E675"
    },
    "267": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "268": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "272": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "273": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5AA6E675"
    },
    "278": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "279": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x390"
    },
    "282": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "283": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "284": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6AC5DB19"
    },
    "289": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "290": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B4"
    },
    "293": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "294": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "295": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "300": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "301": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3BC"
    },
    "304": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "305": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "306": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x77C7B8FC"
    },
    "311": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "312": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E2"
    },
    "315": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "316": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "319": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "320": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "321": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "322": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x39509351"
    },
    "327": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "328": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33F"
    },
    "331": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "332": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "333": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x45DC3DD8"
    },
    "338": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "339": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36B"
    },
    "342": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "343": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "344": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x48A0D754"
    },
    "349": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "350": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x388"
    },
    "353": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "354": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "357": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "358": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "359": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "360": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18160DDD"
    },
    "365": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "GT",
      "path": "23"
    },
    "366": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "370": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "371": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18160DDD"
    },
    "376": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "377": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B4"
    },
    "380": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "381": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "382": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x23B872DD"
    },
    "387": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "388": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE"
    },
    "391": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "392": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "393": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x2E1A7D4D"
    },
    "398": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "399": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x304"
    },
    "402": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "403": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "404": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "409": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "410": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x321"
    },
    "413": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "414": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C4"
    },
    "417": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "418": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "419": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "420": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18EE9B7"
    },
    "425": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "426": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "430": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "431": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6FDDE03"
    },
    "436": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "437": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F7"
    },
    "440": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "441": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "442": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95EA7B3"
    },
    "447": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "EQ",
      "path": "23"
    },
    "448": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x274"
    },
    "451": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "452": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "453": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        415,
        3959
      ],
      "op": "REVERT",
      "path": "23"
    },
    "457": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "458": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "461": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "463": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "DUP1",
      "path": "23"
    },
    "464": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "465": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "SUB",
      "path": "23"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "468": {
      "op": "DUP2"
    },
    "469": {
      "op": "LT"
    },
    "470": {
      "op": "ISZERO"
    },
    "471": {
      "op": "PUSH2",
      "value": "0x1DF"
    },
    "474": {
      "op": "JUMPI"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "477": {
      "op": "DUP1"
    },
    "478": {
      "op": "REVERT"
    },
    "479": {
      "op": "JUMPDEST"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "DUP2",
      "path": "23"
    },
    "490": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "491": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "AND",
      "path": "23"
    },
    "492": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "493": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "495": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "ADD",
      "path": "23"
    },
    "496": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "497": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x519"
    },
    "500": {
      "fn": "yVault.harvest",
      "jump": "i",
      "offset": [
        2936,
        3168
      ],
      "op": "JUMP",
      "path": "23"
    },
    "501": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "502": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "STOP",
      "path": "23"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DA"
    },
    "510": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMP",
      "path": "2"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP3",
      "path": "2"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "2"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "2"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "2"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP6",
      "path": "2"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "2"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "545": {
      "op": "JUMPDEST"
    },
    "546": {
      "op": "DUP4"
    },
    "547": {
      "op": "DUP2"
    },
    "548": {
      "op": "LT"
    },
    "549": {
      "op": "ISZERO"
    },
    "550": {
      "op": "PUSH2",
      "value": "0x239"
    },
    "553": {
      "op": "JUMPI"
    },
    "554": {
      "op": "DUP2"
    },
    "555": {
      "op": "DUP2"
    },
    "556": {
      "op": "ADD"
    },
    "557": {
      "op": "MLOAD"
    },
    "558": {
      "op": "DUP4"
    },
    "559": {
      "op": "DUP3"
    },
    "560": {
      "op": "ADD"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "op": "PUSH2",
      "value": "0x221"
    },
    "568": {
      "op": "JUMP"
    },
    "569": {
      "op": "JUMPDEST"
    },
    "570": {
      "op": "POP"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "2"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "2"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "AND",
      "path": "2"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP3",
      "path": "2"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "2"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "2"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "EXP",
      "path": "2"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "2"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "NOT",
      "path": "2"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "AND",
      "path": "2"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "2"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "2"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "619": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "2"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "623": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "625": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "2"
    },
    "626": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "627": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "RETURN",
      "path": "2"
    },
    "628": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "629": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "632": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "636": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SUB",
      "path": "2"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "639": {
      "op": "DUP2"
    },
    "640": {
      "op": "LT"
    },
    "641": {
      "op": "ISZERO"
    },
    "642": {
      "op": "PUSH2",
      "value": "0x28A"
    },
    "645": {
      "op": "JUMPI"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "648": {
      "op": "DUP1"
    },
    "649": {
      "op": "REVERT"
    },
    "650": {
      "op": "JUMPDEST"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "op": "SUB"
    },
    "660": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "661": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "662": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "AND",
      "path": "2"
    },
    "663": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "664": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "666": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ADD",
      "path": "2"
    },
    "667": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "668": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x670"
    },
    "671": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "672": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "673": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "676": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "677": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "678": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "679": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "680": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "681": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "682": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "683": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "684": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SUB",
      "path": "2"
    },
    "687": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "689": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ADD",
      "path": "2"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "691": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "RETURN",
      "path": "2"
    },
    "692": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "693": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC"
    },
    "696": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x68E"
    },
    "699": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMP",
      "path": "2"
    },
    "700": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "701": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "703": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "DUP1",
      "path": "2"
    },
    "704": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "705": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "706": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "DUP3",
      "path": "2"
    },
    "707": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "708": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "709": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "710": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "DUP2",
      "path": "2"
    },
    "711": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "712": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SUB",
      "path": "2"
    },
    "713": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "715": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "ADD",
      "path": "2"
    },
    "716": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "717": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "RETURN",
      "path": "2"
    },
    "718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SUB",
      "path": "2"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "729": {
      "op": "DUP2"
    },
    "730": {
      "op": "LT"
    },
    "731": {
      "op": "ISZERO"
    },
    "732": {
      "op": "PUSH2",
      "value": "0x2E4"
    },
    "735": {
      "op": "JUMPI"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "op": "REVERT"
    },
    "740": {
      "op": "JUMPDEST"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "AND",
      "path": "2"
    },
    "754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "ADD",
      "path": "2"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "AND",
      "path": "2"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "ADD",
      "path": "2"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x694"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4881,
        5198
      ],
      "op": "JUMP",
      "path": "2"
    },
    "772": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "773": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "776": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "778": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "DUP1",
      "path": "23"
    },
    "779": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "780": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "SUB",
      "path": "23"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "783": {
      "op": "DUP2"
    },
    "784": {
      "op": "LT"
    },
    "785": {
      "op": "ISZERO"
    },
    "786": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "789": {
      "op": "JUMPI"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "792": {
      "op": "DUP1"
    },
    "793": {
      "op": "REVERT"
    },
    "794": {
      "op": "JUMPDEST"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "797": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x721"
    },
    "800": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3241,
        3830
      ],
      "op": "JUMP",
      "path": "23"
    },
    "801": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "802": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x329"
    },
    "805": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x940"
    },
    "808": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "809": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "810": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "812": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "813": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "814": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "816": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "817": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "818": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "AND",
      "path": "2"
    },
    "819": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "DUP3",
      "path": "2"
    },
    "820": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "821": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "822": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "823": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "824": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "825": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SUB",
      "path": "2"
    },
    "826": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "828": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "ADD",
      "path": "2"
    },
    "829": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "830": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "RETURN",
      "path": "2"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "SUB",
      "path": "2"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "842": {
      "op": "DUP2"
    },
    "843": {
      "op": "LT"
    },
    "844": {
      "op": "ISZERO"
    },
    "845": {
      "op": "PUSH2",
      "value": "0x355"
    },
    "848": {
      "op": "JUMPI"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "851": {
      "op": "DUP1"
    },
    "852": {
      "op": "REVERT"
    },
    "853": {
      "op": "JUMPDEST"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "AND",
      "path": "2"
    },
    "866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "867": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "ADD",
      "path": "2"
    },
    "870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x949"
    },
    "874": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "875": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "876": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "879": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "881": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "DUP1",
      "path": "23"
    },
    "882": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "883": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "SUB",
      "path": "23"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "886": {
      "op": "DUP2"
    },
    "887": {
      "op": "LT"
    },
    "888": {
      "op": "ISZERO"
    },
    "889": {
      "op": "PUSH2",
      "value": "0x381"
    },
    "892": {
      "op": "JUMPI"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "895": {
      "op": "DUP1"
    },
    "896": {
      "op": "REVERT"
    },
    "897": {
      "op": "JUMPDEST"
    },
    "898": {
      "op": "POP"
    },
    "899": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "900": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x99D"
    },
    "903": {
      "fn": "yVault.setMin",
      "jump": "i",
      "offset": [
        1236,
        1357
      ],
      "op": "JUMP",
      "path": "23"
    },
    "904": {
      "fn": "yVault.available",
      "offset": [
        1817,
        1937
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "905": {
      "fn": "yVault.available",
      "offset": [
        1817,
        1937
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BC"
    },
    "908": {
      "fn": "yVault.available",
      "offset": [
        1817,
        1937
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9EF"
    },
    "911": {
      "fn": "yVault.available",
      "jump": "i",
      "offset": [
        1817,
        1937
      ],
      "op": "JUMP",
      "path": "23"
    },
    "912": {
      "offset": [
        635,
        660
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "913": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x398"
    },
    "916": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAA5"
    },
    "919": {
      "fn": "yVault.available",
      "jump": "i",
      "offset": [
        635,
        660
      ],
      "op": "JUMP",
      "path": "23"
    },
    "920": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "921": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "923": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "DUP1",
      "path": "23"
    },
    "924": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "offset": [
        635,
        660
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "934": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "935": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "AND",
      "path": "23"
    },
    "936": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "DUP3",
      "path": "23"
    },
    "937": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "938": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "939": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "940": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "DUP2",
      "path": "23"
    },
    "941": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "942": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "SUB",
      "path": "23"
    },
    "943": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "945": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "ADD",
      "path": "23"
    },
    "946": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "947": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "RETURN",
      "path": "23"
    },
    "948": {
      "offset": [
        596,
        628
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "949": {
      "fn": "yVault.available",
      "offset": [
        596,
        628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BC"
    },
    "952": {
      "fn": "yVault.available",
      "offset": [
        596,
        628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAB4"
    },
    "955": {
      "fn": "yVault.available",
      "jump": "i",
      "offset": [
        596,
        628
      ],
      "op": "JUMP",
      "path": "23"
    },
    "956": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "957": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC"
    },
    "960": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "962": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "963": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "964": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "SUB",
      "path": "2"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "967": {
      "op": "DUP2"
    },
    "968": {
      "op": "LT"
    },
    "969": {
      "op": "ISZERO"
    },
    "970": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "973": {
      "op": "JUMPI"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "976": {
      "op": "DUP1"
    },
    "977": {
      "op": "REVERT"
    },
    "978": {
      "op": "JUMPDEST"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "987": {
      "op": "SHL"
    },
    "988": {
      "op": "SUB"
    },
    "989": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "AND",
      "path": "2"
    },
    "990": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABA"
    },
    "993": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "994": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3836,
        3957
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "995": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3836,
        3957
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BC"
    },
    "998": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3836,
        3957
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAD5"
    },
    "1001": {
      "fn": "yVault.getPricePerFullShare",
      "jump": "i",
      "offset": [
        3836,
        3957
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1002": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2764,
        2844
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1003": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2764,
        2844
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "1006": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2764,
        2844
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAF6"
    },
    "1009": {
      "fn": "yVault.withdrawAll",
      "jump": "i",
      "offset": [
        2764,
        2844
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1010": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1011": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "1014": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1016": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1017": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1018": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "SUB",
      "path": "23"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1021": {
      "op": "DUP2"
    },
    "1022": {
      "op": "LT"
    },
    "1023": {
      "op": "ISZERO"
    },
    "1024": {
      "op": "PUSH2",
      "value": "0x408"
    },
    "1027": {
      "op": "JUMPI"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1030": {
      "op": "DUP1"
    },
    "1031": {
      "op": "REVERT"
    },
    "1032": {
      "op": "JUMPDEST"
    },
    "1033": {
      "op": "POP"
    },
    "1034": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "SUB"
    },
    "1043": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "AND",
      "path": "23"
    },
    "1044": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB09"
    },
    "1047": {
      "fn": "yVault.setController",
      "jump": "i",
      "offset": [
        1519,
        1669
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1048": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1049": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF"
    },
    "1052": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB78"
    },
    "1055": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2413,
        2498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "1060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1064": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "SUB",
      "path": "2"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1067": {
      "op": "DUP2"
    },
    "1068": {
      "op": "LT"
    },
    "1069": {
      "op": "ISZERO"
    },
    "1070": {
      "op": "PUSH2",
      "value": "0x436"
    },
    "1073": {
      "op": "JUMPI"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1076": {
      "op": "DUP1"
    },
    "1077": {
      "op": "REVERT"
    },
    "1078": {
      "op": "JUMPDEST"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "op": "SUB"
    },
    "1088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "AND",
      "path": "2"
    },
    "1091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "ADD",
      "path": "2"
    },
    "1095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD9"
    },
    "1099": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1100": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1101": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "1104": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1106": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1107": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1108": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "SUB",
      "path": "2"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "LT"
    },
    "1113": {
      "op": "ISZERO"
    },
    "1114": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "1117": {
      "op": "JUMPI"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1120": {
      "op": "DUP1"
    },
    "1121": {
      "op": "REVERT"
    },
    "1122": {
      "op": "JUMPDEST"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1133": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1134": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "AND",
      "path": "2"
    },
    "1135": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1136": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1138": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "ADD",
      "path": "2"
    },
    "1139": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1140": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC47"
    },
    "1143": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3738,
        3910
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1144": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1145": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "1148": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1150": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1151": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1152": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "SUB",
      "path": "23"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1155": {
      "op": "DUP2"
    },
    "1156": {
      "op": "LT"
    },
    "1157": {
      "op": "ISZERO"
    },
    "1158": {
      "op": "PUSH2",
      "value": "0x48E"
    },
    "1161": {
      "op": "JUMPI"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1164": {
      "op": "DUP1"
    },
    "1165": {
      "op": "REVERT"
    },
    "1166": {
      "op": "JUMPDEST"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "AND",
      "path": "23"
    },
    "1178": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC5B"
    },
    "1181": {
      "fn": "yVault.setGovernance",
      "jump": "i",
      "offset": [
        1363,
        1513
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1182": {
      "fn": "yVault.balance",
      "offset": [
        1058,
        1230
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1183": {
      "fn": "yVault.balance",
      "offset": [
        1058,
        1230
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BC"
    },
    "1186": {
      "fn": "yVault.balance",
      "offset": [
        1058,
        1230
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCCA"
    },
    "1189": {
      "fn": "yVault.balance",
      "jump": "i",
      "offset": [
        1058,
        1230
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1190": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1191": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "1194": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1196": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1197": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1198": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "SUB",
      "path": "23"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1201": {
      "op": "DUP2"
    },
    "1202": {
      "op": "LT"
    },
    "1203": {
      "op": "ISZERO"
    },
    "1204": {
      "op": "PUSH2",
      "value": "0x4BC"
    },
    "1207": {
      "op": "JUMPI"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1210": {
      "op": "DUP1"
    },
    "1211": {
      "op": "REVERT"
    },
    "1212": {
      "op": "JUMPDEST"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1215": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDD6"
    },
    "1218": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2208,
        2758
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1219": {
      "fn": "yVault.earn",
      "offset": [
        1943,
        2112
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1220": {
      "fn": "yVault.earn",
      "offset": [
        1943,
        2112
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "1223": {
      "fn": "yVault.earn",
      "offset": [
        1943,
        2112
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF56"
    },
    "1226": {
      "fn": "yVault.earn",
      "jump": "i",
      "offset": [
        1943,
        2112
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1227": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1228": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC"
    },
    "1231": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1233": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1234": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1235": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "SUB",
      "path": "2"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1238": {
      "op": "DUP2"
    },
    "1239": {
      "op": "LT"
    },
    "1240": {
      "op": "ISZERO"
    },
    "1241": {
      "op": "PUSH2",
      "value": "0x4E1"
    },
    "1244": {
      "op": "JUMPI"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1247": {
      "op": "DUP1"
    },
    "1248": {
      "op": "REVERT"
    },
    "1249": {
      "op": "JUMPDEST"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1257": {
      "op": "SHL"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1260": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1261": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1262": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "AND",
      "path": "2"
    },
    "1263": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1264": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1266": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "ADD",
      "path": "2"
    },
    "1267": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1268": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "AND",
      "path": "2"
    },
    "1269": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFC"
    },
    "1272": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1273": {
      "fn": "yVault.depositAll",
      "offset": [
        2118,
        2202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1274": {
      "fn": "yVault.depositAll",
      "offset": [
        2118,
        2202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F5"
    },
    "1277": {
      "fn": "yVault.depositAll",
      "offset": [
        2118,
        2202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1027"
    },
    "1280": {
      "fn": "yVault.depositAll",
      "jump": "i",
      "offset": [
        2118,
        2202
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1281": {
      "offset": [
        666,
        691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1282": {
      "fn": "yVault.depositAll",
      "offset": [
        666,
        691
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x398"
    },
    "1285": {
      "fn": "yVault.depositAll",
      "offset": [
        666,
        691
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10A9"
    },
    "1288": {
      "fn": "yVault.depositAll",
      "jump": "i",
      "offset": [
        666,
        691
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1289": {
      "offset": [
        568,
        590
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1290": {
      "fn": "yVault.depositAll",
      "offset": [
        568,
        590
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BC"
    },
    "1293": {
      "fn": "yVault.depositAll",
      "offset": [
        568,
        590
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10B8"
    },
    "1296": {
      "fn": "yVault.depositAll",
      "jump": "i",
      "offset": [
        568,
        590
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1297": {
      "offset": [
        542,
        561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1298": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x398"
    },
    "1301": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10BE"
    },
    "1304": {
      "fn": "yVault.depositAll",
      "jump": "i",
      "offset": [
        542,
        561
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1305": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1306": {
      "fn": "yVault.harvest",
      "offset": [
        3024,
        3034
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 0,
      "value": "0x8"
    },
    "1308": {
      "fn": "yVault.harvest",
      "offset": [
        3024,
        3034
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "yVault.harvest",
      "offset": [
        3024,
        3034
      ],
      "op": "AND",
      "path": "23"
    },
    "1318": {
      "fn": "yVault.harvest",
      "offset": [
        3010,
        3020
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1319": {
      "branch": 76,
      "fn": "yVault.harvest",
      "offset": [
        3010,
        3034
      ],
      "op": "EQ",
      "path": "23"
    },
    "1320": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x566"
    },
    "1323": {
      "branch": 76,
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1324": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1326": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1327": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1336": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1337": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1339": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1341": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1342": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1343": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1344": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "1346": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "1348": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1349": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1350": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1351": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "1368": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1369": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1370": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1371": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1372": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1373": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1374": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1375": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1376": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "SUB",
      "path": "23"
    },
    "1377": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "1379": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1380": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1381": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1382": {
      "fn": "yVault.harvest",
      "offset": [
        3002,
        3050
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1383": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 1,
      "value": "0x5"
    },
    "1385": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "fn": "yVault.harvest",
      "offset": [
        3068,
        3093
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1395": {
      "fn": "yVault.harvest",
      "offset": [
        3068,
        3093
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1396": {
      "fn": "yVault.harvest",
      "offset": [
        3068,
        3093
      ],
      "op": "AND",
      "path": "23"
    },
    "1397": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1400": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1401": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1402": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "DIV",
      "path": "23"
    },
    "1403": {
      "fn": "yVault.harvest",
      "offset": [
        3087,
        3092
      ],
      "op": "AND",
      "path": "23"
    },
    "1404": {
      "fn": "yVault.harvest",
      "offset": [
        3068,
        3093
      ],
      "op": "EQ",
      "path": "23"
    },
    "1405": {
      "branch": 77,
      "fn": "yVault.harvest",
      "offset": [
        3068,
        3093
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1406": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5B6"
    },
    "1409": {
      "branch": 77,
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1410": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1412": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1413": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1420": {
      "op": "SHL"
    },
    "1421": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1422": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1423": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1425": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1427": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1428": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "ADD",
      "path": "23"
    },
    "1429": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1430": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1432": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "1434": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1435": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "ADD",
      "path": "23"
    },
    "1436": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1437": {
      "op": "PUSH5",
      "value": "0x3A37B5B2B7"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "1448": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1449": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "ADD",
      "path": "23"
    },
    "1450": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1451": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1452": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1453": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1454": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1455": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1456": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "SUB",
      "path": "23"
    },
    "1457": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "1459": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "ADD",
      "path": "23"
    },
    "1460": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1461": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1462": {
      "fn": "yVault.harvest",
      "offset": [
        3060,
        3103
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1463": {
      "fn": "yVault.harvest",
      "offset": [
        3142,
        3152
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 2,
      "value": "0x8"
    },
    "1465": {
      "fn": "yVault.harvest",
      "offset": [
        3142,
        3152
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1466": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5D6"
    },
    "1469": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3161
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1476": {
      "op": "SHL"
    },
    "1477": {
      "op": "SUB"
    },
    "1478": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3141
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1479": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3141
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1480": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3141
      ],
      "op": "AND",
      "path": "23"
    },
    "1481": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3141
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1482": {
      "fn": "yVault.harvest",
      "offset": [
        3142,
        3152
      ],
      "op": "AND",
      "path": "23"
    },
    "1483": {
      "fn": "yVault.harvest",
      "offset": [
        3154,
        3160
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1484": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3161
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "1489": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3141
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10D2"
    },
    "1492": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3161
      ],
      "op": "AND",
      "path": "23"
    },
    "1493": {
      "fn": "yVault.harvest",
      "jump": "i",
      "offset": [
        3113,
        3161
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1494": {
      "fn": "yVault.harvest",
      "offset": [
        3113,
        3161
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1495": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "POP",
      "path": "23"
    },
    "1496": {
      "fn": "yVault.harvest",
      "offset": [
        2936,
        3168
      ],
      "op": "POP",
      "path": "23"
    },
    "1497": {
      "fn": "yVault.harvest",
      "jump": "o",
      "offset": [
        2936,
        3168
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1498": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1499": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x3"
    },
    "1501": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1502": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1503": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1505": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1506": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1507": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1509": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1511": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1515": {
      "op": "NOT"
    },
    "1516": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1519": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1521": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1522": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "AND",
      "path": "2"
    },
    "1523": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1524": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MUL",
      "path": "2"
    },
    "1525": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1526": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1527": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "1528": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "AND",
      "path": "2"
    },
    "1529": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1530": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1531": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1532": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DIV",
      "path": "2"
    },
    "1533": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1534": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1535": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1536": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1537": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1538": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DIV",
      "path": "2"
    },
    "1539": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1540": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MUL",
      "path": "2"
    },
    "1541": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1542": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1543": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1544": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1545": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1546": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1547": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1548": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1549": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1550": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1551": {
      "fn": "ERC20.name",
      "offset": [
        2256,
        2269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1553": {
      "fn": "ERC20.name",
      "offset": [
        2256,
        2269
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1554": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1555": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1556": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1557": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1558": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1559": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1560": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1561": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1562": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1563": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1564": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "1567": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1568": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1569": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1571": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "LT",
      "path": "2"
    },
    "1572": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63B"
    },
    "1575": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1576": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1579": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1580": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1581": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1582": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DIV",
      "path": "2"
    },
    "1583": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MUL",
      "path": "2"
    },
    "1584": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1585": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1586": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1587": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1589": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1590": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1591": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "1594": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1595": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1596": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1597": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1598": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1603": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1605": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1607": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1608": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1609": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1610": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1611": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1612": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1613": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1614": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1615": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1617": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1618": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1619": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1621": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1622": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1623": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1624": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "GT",
      "path": "2"
    },
    "1625": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x649"
    },
    "1628": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1629": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1630": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1631": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SUB",
      "path": "2"
    },
    "1632": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1634": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "AND",
      "path": "2"
    },
    "1635": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1636": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "2"
    },
    "1637": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1638": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1639": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "2"
    },
    "1640": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "2"
    },
    "1641": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "2"
    },
    "1642": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "2"
    },
    "1643": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "2"
    },
    "1644": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1645": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "2"
    },
    "1646": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1647": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1648": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1649": {
      "fn": "ERC20.approve",
      "offset": [
        4338,
        4342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1651": {
      "fn": "ERC20.approve",
      "offset": [
        4354,
        4393
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 4,
      "value": "0x684"
    },
    "1654": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67D"
    },
    "1657": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4373
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1660": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4363,
        4375
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1661": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4375
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1662": {
      "fn": "ERC20.approve",
      "offset": [
        4377,
        4384
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1663": {
      "fn": "ERC20.approve",
      "offset": [
        4386,
        4392
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1664": {
      "fn": "ERC20.approve",
      "offset": [
        4354,
        4362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1128"
    },
    "1667": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4354,
        4393
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1668": {
      "fn": "ERC20.approve",
      "offset": [
        4354,
        4393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "ERC20.approve",
      "offset": [
        4410,
        4414
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x1"
    },
    "1672": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1673": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1674": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1675": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "POP",
      "path": "2"
    },
    "1676": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "POP",
      "path": "2"
    },
    "1677": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1678": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1679": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3341,
        3353
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x2"
    },
    "1681": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3341,
        3353
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1682": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1683": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4987,
        4991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5039
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x6A1"
    },
    "1690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5013,
        5019
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5032,
        5038
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1214"
    },
    "1696": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5003,
        5039
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5039
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5049,
        5170
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x717"
    },
    "1701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5058,
        5064
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5066,
        5078
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AD"
    },
    "1705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5066,
        5076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1708": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5066,
        5078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1709": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5066,
        5078
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "1713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5118,
        5124
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "ADD",
      "path": "2"
    },
    "1721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "1727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "ADD",
      "path": "2"
    },
    "1732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B36"
    },
    "1735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "1737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "DUP11",
      "path": "2"
    },
    "1748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "AND",
      "path": "2"
    },
    "1749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5100,
        5112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6EB"
    },
    "1767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5100,
        5110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "1770": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5100,
        5112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5100,
        5112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "op": "SUB"
    },
    "1780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "AND",
      "path": "2"
    },
    "1781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "ADD",
      "path": "2"
    },
    "1787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "ADD",
      "path": "2"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1796": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1800": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137B"
    },
    "1808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "AND",
      "path": "2"
    },
    "1809": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5080,
        5169
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1810": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1811": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5049,
        5057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1128"
    },
    "1814": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5049,
        5170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1815": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5049,
        5170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5187,
        5191
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1821": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "POP",
      "path": "2"
    },
    "1822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "POP",
      "path": "2"
    },
    "1823": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4881,
        5198
      ],
      "op": "POP",
      "path": "2"
    },
    "1824": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4881,
        5198
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1825": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1826": {
      "fn": "yVault.withdraw",
      "offset": [
        3290,
        3296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1828": {
      "fn": "yVault.withdraw",
      "offset": [
        3299,
        3342
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x752"
    },
    "1831": {
      "fn": "yVault.withdraw",
      "offset": [
        3328,
        3341
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x72E"
    },
    "1834": {
      "fn": "yVault.withdraw",
      "offset": [
        3328,
        3339
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x68E"
    },
    "1837": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3328,
        3341
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1838": {
      "fn": "yVault.withdraw",
      "offset": [
        3328,
        3341
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1839": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3322
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x746"
    },
    "1842": {
      "fn": "yVault.withdraw",
      "offset": [
        3314,
        3321
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1843": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3309
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x73A"
    },
    "1846": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3307
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCCA"
    },
    "1849": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3300,
        3309
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1850": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3309
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1851": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3313
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1852": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3322
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "1857": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3313
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1412"
    },
    "1860": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3322
      ],
      "op": "AND",
      "path": "23"
    },
    "1861": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3300,
        3322
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1862": {
      "fn": "yVault.withdraw",
      "offset": [
        3300,
        3322
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1863": {
      "fn": "yVault.withdraw",
      "offset": [
        3299,
        3327
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1864": {
      "fn": "yVault.withdraw",
      "offset": [
        3299,
        3342
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "1869": {
      "fn": "yVault.withdraw",
      "offset": [
        3299,
        3327
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1472"
    },
    "1872": {
      "fn": "yVault.withdraw",
      "offset": [
        3299,
        3342
      ],
      "op": "AND",
      "path": "23"
    },
    "1873": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3299,
        3342
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1874": {
      "fn": "yVault.withdraw",
      "offset": [
        3299,
        3342
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1875": {
      "fn": "yVault.withdraw",
      "offset": [
        3290,
        3342
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1876": {
      "fn": "yVault.withdraw",
      "offset": [
        3290,
        3342
      ],
      "op": "POP",
      "path": "23"
    },
    "1877": {
      "fn": "yVault.withdraw",
      "offset": [
        3352,
        3378
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 10,
      "value": "0x75E"
    },
    "1880": {
      "fn": "yVault.withdraw",
      "offset": [
        3358,
        3368
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1881": {
      "fn": "yVault.withdraw",
      "offset": [
        3370,
        3377
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1882": {
      "fn": "yVault.withdraw",
      "offset": [
        3352,
        3357
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14B4"
    },
    "1885": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3352,
        3378
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1886": {
      "fn": "yVault.withdraw",
      "offset": [
        3352,
        3378
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1887": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1889": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1890": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1892": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1893": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1894": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1903": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1904": {
      "fn": "yVault.withdraw",
      "offset": [
        3447,
        3451
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "1905": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1907": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1908": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "ADD",
      "path": "23"
    },
    "1909": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1910": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1911": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1914": {
      "op": "SWAP3"
    },
    "1915": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1918": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1919": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "DIV",
      "path": "23"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "op": "SUB"
    },
    "1928": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "AND",
      "path": "23"
    },
    "1929": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1930": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3438
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "1935": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3438
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1936": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "1938": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1939": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1940": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "ADD",
      "path": "23"
    },
    "1941": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1942": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1944": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1945": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1946": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1947": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1948": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1949": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SUB",
      "path": "23"
    },
    "1950": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "ADD",
      "path": "23"
    },
    "1951": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1952": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3428
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1953": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1954": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "1955": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1956": {
      "op": "DUP1"
    },
    "1957": {
      "op": "ISZERO"
    },
    "1958": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "1961": {
      "op": "JUMPI"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1964": {
      "op": "DUP1"
    },
    "1965": {
      "op": "REVERT"
    },
    "1966": {
      "op": "JUMPDEST"
    },
    "1967": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "POP",
      "path": "23"
    },
    "1968": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "GAS",
      "path": "23"
    },
    "1969": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "1970": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1971": {
      "op": "DUP1"
    },
    "1972": {
      "op": "ISZERO"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x7C2"
    },
    "1976": {
      "op": "JUMPI"
    },
    "1977": {
      "op": "RETURNDATASIZE"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1980": {
      "op": "DUP1"
    },
    "1981": {
      "op": "RETURNDATACOPY"
    },
    "1982": {
      "op": "RETURNDATASIZE"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1985": {
      "op": "REVERT"
    },
    "1986": {
      "op": "JUMPDEST"
    },
    "1987": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "POP",
      "path": "23"
    },
    "1988": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "POP",
      "path": "23"
    },
    "1989": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "POP",
      "path": "23"
    },
    "1990": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "POP",
      "path": "23"
    },
    "1991": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1993": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1994": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1997": {
      "op": "DUP2"
    },
    "1998": {
      "op": "LT"
    },
    "1999": {
      "op": "ISZERO"
    },
    "2000": {
      "op": "PUSH2",
      "value": "0x7D8"
    },
    "2003": {
      "op": "JUMPI"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2006": {
      "op": "DUP1"
    },
    "2007": {
      "op": "REVERT"
    },
    "2008": {
      "op": "JUMPDEST"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2011": {
      "fn": "yVault.withdraw",
      "offset": [
        3423,
        3453
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "fn": "yVault.withdraw",
      "offset": [
        3467,
        3472
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2014": {
      "fn": "yVault.withdraw",
      "offset": [
        3467,
        3472
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2015": {
      "branch": 78,
      "fn": "yVault.withdraw",
      "offset": [
        3467,
        3472
      ],
      "op": "LT",
      "path": "23"
    },
    "2016": {
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2017": {
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x91F"
    },
    "2020": {
      "branch": 78,
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2021": {
      "fn": "yVault.withdraw",
      "offset": [
        3488,
        3502
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2023": {
      "fn": "yVault.withdraw",
      "offset": [
        3505,
        3513
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7F6"
    },
    "2026": {
      "fn": "yVault.withdraw",
      "offset": [
        3505,
        3506
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2027": {
      "fn": "yVault.withdraw",
      "offset": [
        3511,
        3512
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2028": {
      "fn": "yVault.withdraw",
      "offset": [
        3505,
        3513
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2033": {
      "fn": "yVault.withdraw",
      "offset": [
        3505,
        3510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15BC"
    },
    "2036": {
      "fn": "yVault.withdraw",
      "offset": [
        3505,
        3513
      ],
      "op": "AND",
      "path": "23"
    },
    "2037": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3505,
        3513
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2038": {
      "fn": "yVault.withdraw",
      "offset": [
        3505,
        3513
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2039": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 11,
      "value": "0x8"
    },
    "2041": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2042": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "2044": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2045": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2047": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2048": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2049": {
      "op": "PUSH4",
      "value": "0xF3FEF3A3"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2058": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2070": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2071": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2072": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "DIV",
      "path": "23"
    },
    "2073": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2074": {
      "fn": "yVault.withdraw",
      "offset": [
        3568,
        3573
      ],
      "op": "AND",
      "path": "23"
    },
    "2075": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2077": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2078": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "ADD",
      "path": "23"
    },
    "2079": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2080": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2082": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2083": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "ADD",
      "path": "23"
    },
    "2084": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2085": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2086": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2087": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2088": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2089": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2090": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2093": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "AND",
      "path": "23"
    },
    "2094": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2095": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3559
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF3FEF3A3"
    },
    "2100": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3559
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2101": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2103": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2104": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2105": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "ADD",
      "path": "23"
    },
    "2106": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2109": {
      "op": "SWAP3"
    },
    "2110": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2111": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2112": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2113": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2114": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2115": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "SUB",
      "path": "23"
    },
    "2116": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "ADD",
      "path": "23"
    },
    "2117": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2118": {
      "op": "DUP4"
    },
    "2119": {
      "fn": "yVault.withdraw",
      "offset": [
        3539,
        3549
      ],
      "op": "DUP8",
      "path": "23"
    },
    "2120": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2121": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "2122": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2123": {
      "op": "DUP1"
    },
    "2124": {
      "op": "ISZERO"
    },
    "2125": {
      "op": "PUSH2",
      "value": "0x855"
    },
    "2128": {
      "op": "JUMPI"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2131": {
      "op": "DUP1"
    },
    "2132": {
      "op": "REVERT"
    },
    "2133": {
      "op": "JUMPDEST"
    },
    "2134": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "POP",
      "path": "23"
    },
    "2135": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "GAS",
      "path": "23"
    },
    "2136": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "CALL",
      "path": "23"
    },
    "2137": {
      "fn": "yVault.withdraw",
      "offset": [
        3527,
        3586
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2138": {
      "op": "DUP1"
    },
    "2139": {
      "op": "ISZERO"
    },
    "2140": {
      "op": "PUSH2",
      "value": "0x869"
    },
    "2143": {
      "op": "JUMPI"
    },
    "2144": {
      "op": "RETURNDATASIZE"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2147": {
      "op": "DUP1"
    },
    "2148": {
      "op": "RETURNDATACOPY"
    },
    "2149": {
      "op": "RETURNDATASIZE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2152": {
      "op": "REVERT"
    },
    "2153": {
      "op": "JUMPDEST"
    },
    "2154": {
      "op": "POP"
    },
    "2155": {
      "op": "POP"
    },
    "2156": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "2158": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2159": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2161": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2162": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2163": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2170": {
      "op": "SHL"
    },
    "2171": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2172": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2173": {
      "fn": "yVault.withdraw",
      "offset": [
        3638,
        3642
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "2174": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2176": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2177": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "ADD",
      "path": "23"
    },
    "2178": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2179": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2180": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2183": {
      "op": "SWAP5"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2188": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2189": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2190": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "DIV",
      "path": "23"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "AND",
      "path": "23"
    },
    "2200": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2201": {
      "op": "POP"
    },
    "2202": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3629
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "2207": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3629
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2208": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2210": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2211": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2212": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "ADD",
      "path": "23"
    },
    "2213": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2214": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2216": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2217": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2218": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2219": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2220": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2221": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SUB",
      "path": "23"
    },
    "2222": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "ADD",
      "path": "23"
    },
    "2223": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2224": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3619
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2225": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2226": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "2227": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2228": {
      "op": "DUP1"
    },
    "2229": {
      "op": "ISZERO"
    },
    "2230": {
      "op": "PUSH2",
      "value": "0x8BE"
    },
    "2233": {
      "op": "JUMPI"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2236": {
      "op": "DUP1"
    },
    "2237": {
      "op": "REVERT"
    },
    "2238": {
      "op": "JUMPDEST"
    },
    "2239": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "POP",
      "path": "23"
    },
    "2240": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "GAS",
      "path": "23"
    },
    "2241": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "2242": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2243": {
      "op": "DUP1"
    },
    "2244": {
      "op": "ISZERO"
    },
    "2245": {
      "op": "PUSH2",
      "value": "0x8D2"
    },
    "2248": {
      "op": "JUMPI"
    },
    "2249": {
      "op": "RETURNDATASIZE"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2252": {
      "op": "DUP1"
    },
    "2253": {
      "op": "RETURNDATACOPY"
    },
    "2254": {
      "op": "RETURNDATASIZE"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2257": {
      "op": "REVERT"
    },
    "2258": {
      "op": "JUMPDEST"
    },
    "2259": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "POP",
      "path": "23"
    },
    "2260": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "POP",
      "path": "23"
    },
    "2261": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "POP",
      "path": "23"
    },
    "2262": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "POP",
      "path": "23"
    },
    "2263": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2265": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2266": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2269": {
      "op": "DUP2"
    },
    "2270": {
      "op": "LT"
    },
    "2271": {
      "op": "ISZERO"
    },
    "2272": {
      "op": "PUSH2",
      "value": "0x8E8"
    },
    "2275": {
      "op": "JUMPI"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2278": {
      "op": "DUP1"
    },
    "2279": {
      "op": "REVERT"
    },
    "2280": {
      "op": "JUMPDEST"
    },
    "2281": {
      "op": "POP"
    },
    "2282": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2283": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "fn": "yVault.withdraw",
      "offset": [
        3658,
        3668
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2287": {
      "fn": "yVault.withdraw",
      "offset": [
        3671,
        3684
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8FE"
    },
    "2290": {
      "fn": "yVault.withdraw",
      "offset": [
        3614,
        3644
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2291": {
      "fn": "yVault.withdraw",
      "offset": [
        3682,
        3683
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2292": {
      "fn": "yVault.withdraw",
      "offset": [
        3671,
        3684
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2297": {
      "fn": "yVault.withdraw",
      "offset": [
        3671,
        3681
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15BC"
    },
    "2300": {
      "fn": "yVault.withdraw",
      "offset": [
        3671,
        3684
      ],
      "op": "AND",
      "path": "23"
    },
    "2301": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3671,
        3684
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2302": {
      "fn": "yVault.withdraw",
      "offset": [
        3671,
        3684
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2303": {
      "fn": "yVault.withdraw",
      "offset": [
        3658,
        3684
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2304": {
      "fn": "yVault.withdraw",
      "offset": [
        3658,
        3684
      ],
      "op": "POP",
      "path": "23"
    },
    "2305": {
      "fn": "yVault.withdraw",
      "offset": [
        3710,
        3719
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2306": {
      "fn": "yVault.withdraw",
      "offset": [
        3702,
        3707
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2307": {
      "branch": 79,
      "fn": "yVault.withdraw",
      "offset": [
        3702,
        3719
      ],
      "op": "LT",
      "path": "23"
    },
    "2308": {
      "fn": "yVault.withdraw",
      "offset": [
        3698,
        3770
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2309": {
      "fn": "yVault.withdraw",
      "offset": [
        3698,
        3770
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x91B"
    },
    "2312": {
      "branch": 79,
      "fn": "yVault.withdraw",
      "offset": [
        3698,
        3770
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2313": {
      "fn": "yVault.withdraw",
      "offset": [
        3743,
        3755
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 12,
      "value": "0x918"
    },
    "2316": {
      "fn": "yVault.withdraw",
      "offset": [
        3743,
        3744
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2317": {
      "fn": "yVault.withdraw",
      "offset": [
        3749,
        3754
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2318": {
      "fn": "yVault.withdraw",
      "offset": [
        3743,
        3755
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2323": {
      "fn": "yVault.withdraw",
      "offset": [
        3743,
        3748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15FE"
    },
    "2326": {
      "fn": "yVault.withdraw",
      "offset": [
        3743,
        3755
      ],
      "op": "AND",
      "path": "23"
    },
    "2327": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3743,
        3755
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2328": {
      "fn": "yVault.withdraw",
      "offset": [
        3743,
        3755
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2329": {
      "fn": "yVault.withdraw",
      "offset": [
        3739,
        3755
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "2330": {
      "fn": "yVault.withdraw",
      "offset": [
        3739,
        3755
      ],
      "op": "POP",
      "path": "23"
    },
    "2331": {
      "fn": "yVault.withdraw",
      "offset": [
        3698,
        3770
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2332": {
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "POP",
      "path": "23"
    },
    "2333": {
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "POP",
      "path": "23"
    },
    "2334": {
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "POP",
      "path": "23"
    },
    "2335": {
      "fn": "yVault.withdraw",
      "offset": [
        3463,
        3780
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2336": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3795
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 13,
      "value": "0x5"
    },
    "2338": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3795
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2339": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3823
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x93B"
    },
    "2342": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3823
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2343": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3795
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2346": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3795
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2347": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3795
      ],
      "op": "DIV",
      "path": "23"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3795
      ],
      "op": "AND",
      "path": "23"
    },
    "2357": {
      "fn": "yVault.withdraw",
      "offset": [
        3809,
        3819
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2358": {
      "fn": "yVault.withdraw",
      "offset": [
        3821,
        3822
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2359": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3808
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10D2"
    },
    "2362": {
      "fn": "yVault.withdraw",
      "jump": "i",
      "offset": [
        3790,
        3823
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2363": {
      "fn": "yVault.withdraw",
      "offset": [
        3790,
        3823
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2364": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "POP",
      "path": "23"
    },
    "2365": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "POP",
      "path": "23"
    },
    "2366": {
      "fn": "yVault.withdraw",
      "offset": [
        3241,
        3830
      ],
      "op": "POP",
      "path": "23"
    },
    "2367": {
      "fn": "yVault.withdraw",
      "jump": "o",
      "offset": [
        3241,
        3830
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2368": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2369": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x5"
    },
    "2371": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2372": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2374": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "AND",
      "path": "2"
    },
    "2375": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2376": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2377": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2378": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5681,
        5685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2380": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5697,
        5780
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x684"
    },
    "2383": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x956"
    },
    "2386": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "2389": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5706,
        5718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2390": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2391": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5720,
        5727
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2392": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5779
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "2395": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5768,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2396": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2398": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2400": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5741,
        5753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x967"
    },
    "2403": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5741,
        5751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "2406": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5741,
        5753
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2407": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5741,
        5753
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "op": "SUB"
    },
    "2416": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2417": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2418": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "AND",
      "path": "2"
    },
    "2419": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2420": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2421": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2423": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2424": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2425": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "ADD",
      "path": "2"
    },
    "2426": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2427": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2428": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2429": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2430": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2432": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2433": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2434": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "ADD",
      "path": "2"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2437": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2438": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2439": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2440": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2441": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "DUP13",
      "path": "2"
    },
    "2442": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "AND",
      "path": "2"
    },
    "2443": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2444": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2445": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2446": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2447": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2448": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2449": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2450": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2451": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5779
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2456": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FE"
    },
    "2459": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5779
      ],
      "op": "AND",
      "path": "2"
    },
    "2460": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5729,
        5779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2461": {
      "fn": "yVault.setMin",
      "offset": [
        1236,
        1357
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2462": {
      "fn": "yVault.setMin",
      "offset": [
        1304,
        1314
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 16,
      "value": "0x7"
    },
    "2464": {
      "fn": "yVault.setMin",
      "offset": [
        1304,
        1314
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2471": {
      "op": "SHL"
    },
    "2472": {
      "op": "SUB"
    },
    "2473": {
      "fn": "yVault.setMin",
      "offset": [
        1304,
        1314
      ],
      "op": "AND",
      "path": "23"
    },
    "2474": {
      "fn": "yVault.setMin",
      "offset": [
        1290,
        1300
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2475": {
      "branch": 80,
      "fn": "yVault.setMin",
      "offset": [
        1290,
        1314
      ],
      "op": "EQ",
      "path": "23"
    },
    "2476": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9EA"
    },
    "2479": {
      "branch": 80,
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2480": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2482": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2483": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2492": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2493": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2495": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2497": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2498": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "ADD",
      "path": "23"
    },
    "2499": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2500": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "2502": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2504": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2505": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "ADD",
      "path": "23"
    },
    "2506": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2507": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2521": {
      "op": "SHL"
    },
    "2522": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2524": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2525": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "ADD",
      "path": "23"
    },
    "2526": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2527": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2528": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2529": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2530": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2531": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2532": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "SUB",
      "path": "23"
    },
    "2533": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2535": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "ADD",
      "path": "23"
    },
    "2536": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2537": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2538": {
      "fn": "yVault.setMin",
      "offset": [
        1282,
        1330
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2539": {
      "fn": "yVault.setMin",
      "offset": [
        1340,
        1343
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 17,
      "value": "0x6"
    },
    "2541": {
      "fn": "yVault.setMin",
      "offset": [
        1340,
        1350
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2542": {
      "fn": "yVault.setMin",
      "jump": "o",
      "offset": [
        1236,
        1357
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2543": {
      "fn": "yVault.available",
      "offset": [
        1817,
        1937
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2544": {
      "fn": "yVault.available",
      "offset": [
        1859,
        1863
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2546": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1930
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 18,
      "value": "0xAA0"
    },
    "2549": {
      "offset": [
        623,
        628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "2552": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1921
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x746"
    },
    "2555": {
      "fn": "yVault.available",
      "offset": [
        1917,
        1920
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2557": {
      "fn": "yVault.available",
      "offset": [
        1917,
        1920
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2558": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "2560": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2562": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2563": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2564": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2565": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2568": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "EXP",
      "path": "23"
    },
    "2569": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2570": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "DIV",
      "path": "23"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2577": {
      "op": "SHL"
    },
    "2578": {
      "op": "SUB"
    },
    "2579": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1887
      ],
      "op": "AND",
      "path": "23"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2586": {
      "op": "SHL"
    },
    "2587": {
      "op": "SUB"
    },
    "2588": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1897
      ],
      "op": "AND",
      "path": "23"
    },
    "2589": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1897
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "2594": {
      "fn": "yVault.available",
      "offset": [
        1906,
        1910
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "2595": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2597": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2598": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2599": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2604": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "AND",
      "path": "23"
    },
    "2605": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "2607": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "SHL",
      "path": "23"
    },
    "2608": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2609": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2610": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2612": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "ADD",
      "path": "23"
    },
    "2613": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2614": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "AND",
      "path": "23"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2630": {
      "op": "SHL"
    },
    "2631": {
      "op": "SUB"
    },
    "2632": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "AND",
      "path": "23"
    },
    "2633": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2634": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2635": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2637": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "ADD",
      "path": "23"
    },
    "2638": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2639": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2640": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2641": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2643": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2645": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2646": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2647": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2648": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "SUB",
      "path": "23"
    },
    "2649": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2650": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2651": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2652": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "2653": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "ISZERO"
    },
    "2656": {
      "op": "PUSH2",
      "value": "0xA68"
    },
    "2659": {
      "op": "JUMPI"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2662": {
      "op": "DUP1"
    },
    "2663": {
      "op": "REVERT"
    },
    "2664": {
      "op": "JUMPDEST"
    },
    "2665": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2666": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "GAS",
      "path": "23"
    },
    "2667": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "2668": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2669": {
      "op": "DUP1"
    },
    "2670": {
      "op": "ISZERO"
    },
    "2671": {
      "op": "PUSH2",
      "value": "0xA7C"
    },
    "2674": {
      "op": "JUMPI"
    },
    "2675": {
      "op": "RETURNDATASIZE"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2678": {
      "op": "DUP1"
    },
    "2679": {
      "op": "RETURNDATACOPY"
    },
    "2680": {
      "op": "RETURNDATASIZE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2683": {
      "op": "REVERT"
    },
    "2684": {
      "op": "JUMPDEST"
    },
    "2685": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2686": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2687": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2688": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "POP",
      "path": "23"
    },
    "2689": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2691": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2692": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2695": {
      "op": "DUP2"
    },
    "2696": {
      "op": "LT"
    },
    "2697": {
      "op": "ISZERO"
    },
    "2698": {
      "op": "PUSH2",
      "value": "0xA92"
    },
    "2701": {
      "op": "JUMPI"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2704": {
      "op": "DUP1"
    },
    "2705": {
      "op": "REVERT"
    },
    "2706": {
      "op": "JUMPDEST"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2709": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1912
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2710": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1921
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2715": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1916
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1412"
    },
    "2718": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1921
      ],
      "op": "AND",
      "path": "23"
    },
    "2719": {
      "fn": "yVault.available",
      "jump": "i",
      "offset": [
        1882,
        1921
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2720": {
      "fn": "yVault.available",
      "offset": [
        1882,
        1930
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2721": {
      "fn": "yVault.available",
      "offset": [
        1875,
        1930
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2722": {
      "fn": "yVault.available",
      "offset": [
        1875,
        1930
      ],
      "op": "POP",
      "path": "23"
    },
    "2723": {
      "fn": "yVault.available",
      "offset": [
        1817,
        1937
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2724": {
      "fn": "yVault.available",
      "jump": "o",
      "offset": [
        1817,
        1937
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2725": {
      "offset": [
        635,
        660
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2726": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "2728": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2735": {
      "op": "SHL"
    },
    "2736": {
      "op": "SUB"
    },
    "2737": {
      "offset": [
        635,
        660
      ],
      "op": "AND",
      "path": "23"
    },
    "2738": {
      "fn": "yVault.available",
      "offset": [
        635,
        660
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2739": {
      "fn": "yVault.available",
      "jump": "o",
      "offset": [
        635,
        660
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2740": {
      "offset": [
        596,
        628
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2741": {
      "offset": [
        623,
        628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "2744": {
      "offset": [
        596,
        628
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2745": {
      "fn": "yVault.available",
      "jump": "o",
      "offset": [
        596,
        628
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2746": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "AND",
      "path": "2",
      "statement": 19
    },
    "2756": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3484,
        3491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2758": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2759": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2760": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2761": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2763": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2764": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2765": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2766": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2768": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2769": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2770": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2771": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2772": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2773": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3836,
        3957
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2774": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3889,
        3893
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2776": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3912,
        3950
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 20,
      "value": "0xAA0"
    },
    "2779": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3936,
        3949
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAE2"
    },
    "2782": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3936,
        3947
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x68E"
    },
    "2785": {
      "fn": "yVault.getPricePerFullShare",
      "jump": "i",
      "offset": [
        3936,
        3949
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2786": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3936,
        3949
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2787": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3912,
        3931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x746"
    },
    "2790": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3926,
        3930
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xDE0B6B3A7640000"
    },
    "2799": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3912,
        3921
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x73A"
    },
    "2802": {
      "fn": "yVault.getPricePerFullShare",
      "offset": [
        3912,
        3919
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCCA"
    },
    "2805": {
      "fn": "yVault.getPricePerFullShare",
      "jump": "i",
      "offset": [
        3912,
        3921
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2806": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2764,
        2844
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2807": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2806,
        2837
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 21,
      "value": "0xB07"
    },
    "2810": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2815,
        2836
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB02"
    },
    "2813": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2825,
        2835
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2814": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2815,
        2824
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xABA"
    },
    "2817": {
      "fn": "yVault.withdrawAll",
      "jump": "i",
      "offset": [
        2815,
        2836
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2818": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2815,
        2836
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2819": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2806,
        2814
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x721"
    },
    "2822": {
      "fn": "yVault.withdrawAll",
      "jump": "i",
      "offset": [
        2806,
        2837
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2823": {
      "fn": "yVault.withdrawAll",
      "offset": [
        2806,
        2837
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2824": {
      "fn": "yVault.withdrawAll",
      "jump": "o",
      "offset": [
        2764,
        2844
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2825": {
      "fn": "yVault.setController",
      "offset": [
        1519,
        1669
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2826": {
      "fn": "yVault.setController",
      "offset": [
        1602,
        1612
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 22,
      "value": "0x7"
    },
    "2828": {
      "fn": "yVault.setController",
      "offset": [
        1602,
        1612
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "op": "SUB"
    },
    "2837": {
      "fn": "yVault.setController",
      "offset": [
        1602,
        1612
      ],
      "op": "AND",
      "path": "23"
    },
    "2838": {
      "fn": "yVault.setController",
      "offset": [
        1588,
        1598
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2839": {
      "branch": 81,
      "fn": "yVault.setController",
      "offset": [
        1588,
        1612
      ],
      "op": "EQ",
      "path": "23"
    },
    "2840": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB56"
    },
    "2843": {
      "branch": 81,
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2844": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2846": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2847": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2854": {
      "op": "SHL"
    },
    "2855": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2856": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2857": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2859": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2861": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2862": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "ADD",
      "path": "23"
    },
    "2863": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2864": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "2866": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2868": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2869": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "ADD",
      "path": "23"
    },
    "2870": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2871": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2888": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2889": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "ADD",
      "path": "23"
    },
    "2890": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2891": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2892": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2893": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2894": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2895": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2896": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "SUB",
      "path": "23"
    },
    "2897": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2899": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "ADD",
      "path": "23"
    },
    "2900": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2901": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2902": {
      "fn": "yVault.setController",
      "offset": [
        1580,
        1628
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2903": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1648
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 23,
      "value": "0x8"
    },
    "2905": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2906": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "op": "NOT"
    },
    "2916": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "AND",
      "path": "23"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2926": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2927": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2928": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "AND",
      "path": "23"
    },
    "2929": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2930": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2931": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2932": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "OR",
      "path": "23"
    },
    "2933": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2934": {
      "fn": "yVault.setController",
      "offset": [
        1638,
        1662
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2935": {
      "fn": "yVault.setController",
      "jump": "o",
      "offset": [
        1519,
        1669
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2936": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2937": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x4"
    },
    "2939": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2940": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2941": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2943": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2944": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2945": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2947": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2949": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2953": {
      "op": "NOT"
    },
    "2954": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2957": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2959": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2960": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "AND",
      "path": "2"
    },
    "2961": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2962": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MUL",
      "path": "2"
    },
    "2963": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "2"
    },
    "2964": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2965": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2966": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "AND",
      "path": "2"
    },
    "2967": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2968": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2969": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2970": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DIV",
      "path": "2"
    },
    "2971": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2972": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2973": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "2"
    },
    "2974": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2975": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2976": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DIV",
      "path": "2"
    },
    "2977": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2978": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MUL",
      "path": "2"
    },
    "2979": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2980": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "2"
    },
    "2981": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2982": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "2"
    },
    "2983": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2984": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2985": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2986": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2987": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2988": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2989": {
      "fn": "ERC20.symbol",
      "offset": [
        2452,
        2465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2991": {
      "fn": "ERC20.symbol",
      "offset": [
        2452,
        2465
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2992": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2993": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2994": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2995": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2996": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2997": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "2"
    },
    "2998": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2999": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3000": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3001": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3002": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "3005": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3006": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3007": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3009": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "LT",
      "path": "2"
    },
    "3010": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63B"
    },
    "3013": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3014": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3017": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3018": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3019": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3020": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DIV",
      "path": "2"
    },
    "3021": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MUL",
      "path": "2"
    },
    "3022": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3023": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3024": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3025": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3027": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "2"
    },
    "3028": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3029": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "3032": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3034": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6388,
        6392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3036": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6404,
        6533
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 25,
      "value": "0x684"
    },
    "3039": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6413,
        6425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE6"
    },
    "3042": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6413,
        6423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "3045": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6413,
        6425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3046": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6413,
        6425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3047": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6427,
        6434
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3048": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "3051": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6475,
        6490
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3054": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3055": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3058": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "ADD",
      "path": "2"
    },
    "3059": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3063": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "3065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3067": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3069": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "ADD",
      "path": "2"
    },
    "3070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BF2"
    },
    "3073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "3075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3076": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "3077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6448,
        6460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC10"
    },
    "3084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6448,
        6458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "3087": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6448,
        6460
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6448,
        6460
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "op": "SUB"
    },
    "3097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3099": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "AND",
      "path": "2"
    },
    "3100": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3102": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3104": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3105": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3106": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "ADD",
      "path": "2"
    },
    "3107": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3108": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3109": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3110": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3111": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3113": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3114": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3115": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "ADD",
      "path": "2"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3118": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3119": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3120": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3121": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3122": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "DUP14",
      "path": "2"
    },
    "3123": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "AND",
      "path": "2"
    },
    "3124": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3125": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3128": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3129": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3130": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3132": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3133": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3138": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137B"
    },
    "3141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "AND",
      "path": "2"
    },
    "3142": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6436,
        6532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3143": {
      "fn": "ERC20.transfer",
      "offset": [
        3738,
        3910
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3144": {
      "fn": "ERC20.transfer",
      "offset": [
        3824,
        3828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3146": {
      "fn": "ERC20.transfer",
      "offset": [
        3840,
        3882
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 26,
      "value": "0x684"
    },
    "3149": {
      "fn": "ERC20.transfer",
      "offset": [
        3850,
        3862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC54"
    },
    "3152": {
      "fn": "ERC20.transfer",
      "offset": [
        3850,
        3860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1124"
    },
    "3155": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3850,
        3862
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3156": {
      "fn": "ERC20.transfer",
      "offset": [
        3850,
        3862
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3157": {
      "fn": "ERC20.transfer",
      "offset": [
        3864,
        3873
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3158": {
      "fn": "ERC20.transfer",
      "offset": [
        3875,
        3881
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3159": {
      "fn": "ERC20.transfer",
      "offset": [
        3840,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1214"
    },
    "3162": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3840,
        3882
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3163": {
      "fn": "yVault.setGovernance",
      "offset": [
        1363,
        1513
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3164": {
      "fn": "yVault.setGovernance",
      "offset": [
        1446,
        1456
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 27,
      "value": "0x7"
    },
    "3166": {
      "fn": "yVault.setGovernance",
      "offset": [
        1446,
        1456
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "fn": "yVault.setGovernance",
      "offset": [
        1446,
        1456
      ],
      "op": "AND",
      "path": "23"
    },
    "3176": {
      "fn": "yVault.setGovernance",
      "offset": [
        1432,
        1442
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3177": {
      "branch": 82,
      "fn": "yVault.setGovernance",
      "offset": [
        1432,
        1456
      ],
      "op": "EQ",
      "path": "23"
    },
    "3178": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCA8"
    },
    "3181": {
      "branch": 82,
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3182": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3184": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3185": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3192": {
      "op": "SHL"
    },
    "3193": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3194": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3195": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3197": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3199": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3200": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "ADD",
      "path": "23"
    },
    "3201": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3202": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "3204": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3206": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3207": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "ADD",
      "path": "23"
    },
    "3208": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3209": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3226": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3227": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "ADD",
      "path": "23"
    },
    "3228": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3229": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3230": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3231": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3232": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3233": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3234": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "SUB",
      "path": "23"
    },
    "3235": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3237": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "ADD",
      "path": "23"
    },
    "3238": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3239": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3240": {
      "fn": "yVault.setGovernance",
      "offset": [
        1424,
        1472
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3241": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1492
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 28,
      "value": "0x7"
    },
    "3243": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3244": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "op": "SUB"
    },
    "3253": {
      "op": "NOT"
    },
    "3254": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "AND",
      "path": "23"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "op": "SUB"
    },
    "3263": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3264": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3265": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3266": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "AND",
      "path": "23"
    },
    "3267": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3268": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3269": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3270": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "OR",
      "path": "23"
    },
    "3271": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3272": {
      "fn": "yVault.setGovernance",
      "offset": [
        1482,
        1506
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3273": {
      "fn": "yVault.setGovernance",
      "jump": "o",
      "offset": [
        1363,
        1513
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3274": {
      "fn": "yVault.balance",
      "offset": [
        1058,
        1230
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3275": {
      "fn": "yVault.balance",
      "offset": [
        1185,
        1195
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 29,
      "value": "0x8"
    },
    "3277": {
      "fn": "yVault.balance",
      "offset": [
        1185,
        1195
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3278": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3280": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3281": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3283": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3284": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3285": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3292": {
      "op": "SHL"
    },
    "3293": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3294": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "op": "SUB"
    },
    "3303": {
      "fn": "yVault.balance",
      "offset": [
        1185,
        1195
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3306": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3307": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3308": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "DIV",
      "path": "23"
    },
    "3309": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3310": {
      "fn": "yVault.balance",
      "offset": [
        1215,
        1220
      ],
      "op": "AND",
      "path": "23"
    },
    "3311": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3313": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3314": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "ADD",
      "path": "23"
    },
    "3315": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3316": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3317": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3320": {
      "op": "SWAP4"
    },
    "3321": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1223
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAA0"
    },
    "3324": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1223
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3325": {
      "fn": "yVault.balance",
      "offset": [
        1185,
        1195
      ],
      "op": "AND",
      "path": "23"
    },
    "3326": {
      "fn": "yVault.balance",
      "offset": [
        1185,
        1195
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3327": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1206
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "3332": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1206
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3333": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3335": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3336": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3337": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "ADD",
      "path": "23"
    },
    "3338": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3339": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3341": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3342": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3343": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3344": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3345": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3346": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SUB",
      "path": "23"
    },
    "3347": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "ADD",
      "path": "23"
    },
    "3348": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3349": {
      "fn": "yVault.balance",
      "offset": [
        1185,
        1195
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3350": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3351": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "3352": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3353": {
      "op": "DUP1"
    },
    "3354": {
      "op": "ISZERO"
    },
    "3355": {
      "op": "PUSH2",
      "value": "0xD23"
    },
    "3358": {
      "op": "JUMPI"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3361": {
      "op": "DUP1"
    },
    "3362": {
      "op": "REVERT"
    },
    "3363": {
      "op": "JUMPDEST"
    },
    "3364": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "POP",
      "path": "23"
    },
    "3365": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "GAS",
      "path": "23"
    },
    "3366": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "3367": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3368": {
      "op": "DUP1"
    },
    "3369": {
      "op": "ISZERO"
    },
    "3370": {
      "op": "PUSH2",
      "value": "0xD37"
    },
    "3373": {
      "op": "JUMPI"
    },
    "3374": {
      "op": "RETURNDATASIZE"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "RETURNDATACOPY"
    },
    "3379": {
      "op": "RETURNDATASIZE"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3382": {
      "op": "REVERT"
    },
    "3383": {
      "op": "JUMPDEST"
    },
    "3384": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "POP",
      "path": "23"
    },
    "3385": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "POP",
      "path": "23"
    },
    "3386": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "POP",
      "path": "23"
    },
    "3387": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "POP",
      "path": "23"
    },
    "3388": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3390": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3391": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3394": {
      "op": "DUP2"
    },
    "3395": {
      "op": "LT"
    },
    "3396": {
      "op": "ISZERO"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "3400": {
      "op": "JUMPI"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3403": {
      "op": "DUP1"
    },
    "3404": {
      "op": "REVERT"
    },
    "3405": {
      "op": "JUMPDEST"
    },
    "3406": {
      "op": "POP"
    },
    "3407": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3408": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3410": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3411": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3413": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3414": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3415": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3422": {
      "op": "SHL"
    },
    "3423": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3424": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3425": {
      "fn": "yVault.balance",
      "offset": [
        1145,
        1149
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3426": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3428": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3429": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "ADD",
      "path": "23"
    },
    "3430": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3431": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3432": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3433": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3436": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3437": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3438": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "DIV",
      "path": "23"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3445": {
      "op": "SHL"
    },
    "3446": {
      "op": "SUB"
    },
    "3447": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "AND",
      "path": "23"
    },
    "3448": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3449": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1136
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "3454": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1136
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3455": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3457": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3458": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3459": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "ADD",
      "path": "23"
    },
    "3460": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3461": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3463": {
      "fn": "yVault.balance",
      "offset": [
        1173,
        1222
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3464": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3465": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3466": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3467": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3468": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3469": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SUB",
      "path": "23"
    },
    "3470": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "ADD",
      "path": "23"
    },
    "3471": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3472": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1126
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3473": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3474": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "3475": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3476": {
      "op": "DUP1"
    },
    "3477": {
      "op": "ISZERO"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3481": {
      "op": "JUMPI"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3484": {
      "op": "DUP1"
    },
    "3485": {
      "op": "REVERT"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "POP",
      "path": "23"
    },
    "3488": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "GAS",
      "path": "23"
    },
    "3489": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "3490": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3491": {
      "op": "DUP1"
    },
    "3492": {
      "op": "ISZERO"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xDB2"
    },
    "3496": {
      "op": "JUMPI"
    },
    "3497": {
      "op": "RETURNDATASIZE"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "DUP1"
    },
    "3501": {
      "op": "RETURNDATACOPY"
    },
    "3502": {
      "op": "RETURNDATASIZE"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3505": {
      "op": "REVERT"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "POP",
      "path": "23"
    },
    "3508": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "POP",
      "path": "23"
    },
    "3509": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "POP",
      "path": "23"
    },
    "3510": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "POP",
      "path": "23"
    },
    "3511": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3513": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3514": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3517": {
      "op": "DUP2"
    },
    "3518": {
      "op": "LT"
    },
    "3519": {
      "op": "ISZERO"
    },
    "3520": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "3523": {
      "op": "JUMPI"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3526": {
      "op": "DUP1"
    },
    "3527": {
      "op": "REVERT"
    },
    "3528": {
      "op": "JUMPDEST"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3531": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1151
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3532": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1223
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "3537": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1172
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15FE"
    },
    "3540": {
      "fn": "yVault.balance",
      "offset": [
        1121,
        1223
      ],
      "op": "AND",
      "path": "23"
    },
    "3541": {
      "fn": "yVault.balance",
      "jump": "i",
      "offset": [
        1121,
        1223
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3542": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3543": {
      "fn": "yVault.deposit",
      "offset": [
        2256,
        2266
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3545": {
      "fn": "yVault.deposit",
      "offset": [
        2269,
        2278
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDE0"
    },
    "3548": {
      "fn": "yVault.deposit",
      "offset": [
        2269,
        2276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCCA"
    },
    "3551": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2269,
        2278
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3552": {
      "fn": "yVault.deposit",
      "offset": [
        2269,
        2278
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3553": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3555": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3556": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3558": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3559": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3560": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3567": {
      "op": "SHL"
    },
    "3568": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3569": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3570": {
      "fn": "yVault.deposit",
      "offset": [
        2327,
        2331
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3571": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3573": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3574": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "ADD",
      "path": "23"
    },
    "3575": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3576": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3577": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3578": {
      "fn": "yVault.deposit",
      "offset": [
        2256,
        2278
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3579": {
      "fn": "yVault.deposit",
      "offset": [
        2256,
        2278
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3583": {
      "op": "SWAP3"
    },
    "3584": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3587": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3588": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3589": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "DIV",
      "path": "23"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "op": "SUB"
    },
    "3598": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "AND",
      "path": "23"
    },
    "3599": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3600": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2318
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "3605": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2318
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3606": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3608": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3609": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3610": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "ADD",
      "path": "23"
    },
    "3611": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3612": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3614": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3615": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3616": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3617": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3618": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3619": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3620": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SUB",
      "path": "23"
    },
    "3621": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "ADD",
      "path": "23"
    },
    "3622": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3623": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2308
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3624": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3625": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "3626": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3627": {
      "op": "DUP1"
    },
    "3628": {
      "op": "ISZERO"
    },
    "3629": {
      "op": "PUSH2",
      "value": "0xE35"
    },
    "3632": {
      "op": "JUMPI"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3635": {
      "op": "DUP1"
    },
    "3636": {
      "op": "REVERT"
    },
    "3637": {
      "op": "JUMPDEST"
    },
    "3638": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "POP",
      "path": "23"
    },
    "3639": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "GAS",
      "path": "23"
    },
    "3640": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "3641": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3642": {
      "op": "DUP1"
    },
    "3643": {
      "op": "ISZERO"
    },
    "3644": {
      "op": "PUSH2",
      "value": "0xE49"
    },
    "3647": {
      "op": "JUMPI"
    },
    "3648": {
      "op": "RETURNDATASIZE"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3651": {
      "op": "DUP1"
    },
    "3652": {
      "op": "RETURNDATACOPY"
    },
    "3653": {
      "op": "RETURNDATASIZE"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3656": {
      "op": "REVERT"
    },
    "3657": {
      "op": "JUMPDEST"
    },
    "3658": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "POP",
      "path": "23"
    },
    "3659": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "POP",
      "path": "23"
    },
    "3660": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "POP",
      "path": "23"
    },
    "3661": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "POP",
      "path": "23"
    },
    "3662": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3664": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3665": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3668": {
      "op": "DUP2"
    },
    "3669": {
      "op": "LT"
    },
    "3670": {
      "op": "ISZERO"
    },
    "3671": {
      "op": "PUSH2",
      "value": "0xE5F"
    },
    "3674": {
      "op": "JUMPI"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3677": {
      "op": "DUP1"
    },
    "3678": {
      "op": "REVERT"
    },
    "3679": {
      "op": "JUMPDEST"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3682": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2348
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 30,
      "value": "0x5"
    },
    "3684": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2348
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3685": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3686": {
      "fn": "yVault.deposit",
      "offset": [
        2303,
        2333
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2401
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE81"
    },
    "3691": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2401
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3692": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2348
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3695": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2348
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3696": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2348
      ],
      "op": "DIV",
      "path": "23"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "op": "SUB"
    },
    "3705": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2348
      ],
      "op": "AND",
      "path": "23"
    },
    "3706": {
      "fn": "yVault.deposit",
      "offset": [
        2366,
        2376
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3707": {
      "fn": "yVault.deposit",
      "offset": [
        2386,
        2390
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3708": {
      "fn": "yVault.deposit",
      "offset": [
        2393,
        2400
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3709": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2365
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1658"
    },
    "3712": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2343,
        2401
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3713": {
      "fn": "yVault.deposit",
      "offset": [
        2343,
        2401
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3714": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3716": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3717": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3719": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3720": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3721": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3728": {
      "op": "SHL"
    },
    "3729": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3730": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3731": {
      "fn": "yVault.deposit",
      "offset": [
        2449,
        2453
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3732": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3734": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3735": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "ADD",
      "path": "23"
    },
    "3736": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3737": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3738": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3741": {
      "op": "SWAP3"
    },
    "3742": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3745": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3746": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "DIV",
      "path": "23"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "AND",
      "path": "23"
    },
    "3756": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3757": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2440
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "3762": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2440
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3763": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3765": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3766": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3767": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "ADD",
      "path": "23"
    },
    "3768": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3769": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3771": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3772": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3773": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3774": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3775": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3776": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SUB",
      "path": "23"
    },
    "3777": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "ADD",
      "path": "23"
    },
    "3778": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3779": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2430
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3780": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3781": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "3782": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3783": {
      "op": "DUP1"
    },
    "3784": {
      "op": "ISZERO"
    },
    "3785": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3788": {
      "op": "JUMPI"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3791": {
      "op": "DUP1"
    },
    "3792": {
      "op": "REVERT"
    },
    "3793": {
      "op": "JUMPDEST"
    },
    "3794": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "POP",
      "path": "23"
    },
    "3795": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "GAS",
      "path": "23"
    },
    "3796": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "3797": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3798": {
      "op": "DUP1"
    },
    "3799": {
      "op": "ISZERO"
    },
    "3800": {
      "op": "PUSH2",
      "value": "0xEE5"
    },
    "3803": {
      "op": "JUMPI"
    },
    "3804": {
      "op": "RETURNDATASIZE"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3807": {
      "op": "DUP1"
    },
    "3808": {
      "op": "RETURNDATACOPY"
    },
    "3809": {
      "op": "RETURNDATASIZE"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3812": {
      "op": "REVERT"
    },
    "3813": {
      "op": "JUMPDEST"
    },
    "3814": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "POP",
      "path": "23"
    },
    "3815": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "POP",
      "path": "23"
    },
    "3816": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "POP",
      "path": "23"
    },
    "3817": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "POP",
      "path": "23"
    },
    "3818": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3820": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3821": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "LT"
    },
    "3826": {
      "op": "ISZERO"
    },
    "3827": {
      "op": "PUSH2",
      "value": "0xEFB"
    },
    "3830": {
      "op": "JUMPI"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "REVERT"
    },
    "3835": {
      "op": "JUMPDEST"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3838": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "fn": "yVault.deposit",
      "offset": [
        2475,
        2494
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 31,
      "value": "0xF0F"
    },
    "3843": {
      "fn": "yVault.deposit",
      "offset": [
        2425,
        2455
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3844": {
      "fn": "yVault.deposit",
      "offset": [
        2486,
        2493
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3845": {
      "fn": "yVault.deposit",
      "offset": [
        2475,
        2494
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "3850": {
      "fn": "yVault.deposit",
      "offset": [
        2475,
        2485
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15BC"
    },
    "3853": {
      "fn": "yVault.deposit",
      "offset": [
        2475,
        2494
      ],
      "op": "AND",
      "path": "23"
    },
    "3854": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2475,
        2494
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3855": {
      "fn": "yVault.deposit",
      "offset": [
        2475,
        2494
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3856": {
      "fn": "yVault.deposit",
      "offset": [
        2465,
        2494
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "fn": "yVault.deposit",
      "offset": [
        2548,
        2559
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3860": {
      "fn": "yVault.deposit",
      "offset": [
        2577,
        2590
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF1B"
    },
    "3863": {
      "fn": "yVault.deposit",
      "offset": [
        2577,
        2588
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x68E"
    },
    "3866": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2577,
        2590
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3867": {
      "fn": "yVault.deposit",
      "offset": [
        2577,
        2590
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3868": {
      "fn": "yVault.deposit",
      "offset": [
        2573,
        2717
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF26"
    },
    "3871": {
      "fn": "yVault.deposit",
      "offset": [
        2573,
        2717
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "fn": "yVault.deposit",
      "offset": [
        2620,
        2627
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 32
    },
    "3874": {
      "fn": "yVault.deposit",
      "offset": [
        2573,
        2717
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF45"
    },
    "3877": {
      "fn": "yVault.deposit",
      "offset": [
        2573,
        2717
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3878": {
      "fn": "yVault.deposit",
      "offset": [
        2573,
        2717
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3879": {
      "fn": "yVault.deposit",
      "offset": [
        2667,
        2706
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 33,
      "value": "0xF42"
    },
    "3882": {
      "fn": "yVault.deposit",
      "offset": [
        2700,
        2705
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3883": {
      "fn": "yVault.deposit",
      "offset": [
        2668,
        2694
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x746"
    },
    "3886": {
      "fn": "yVault.deposit",
      "offset": [
        2680,
        2693
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF35"
    },
    "3889": {
      "fn": "yVault.deposit",
      "offset": [
        2680,
        2691
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x68E"
    },
    "3892": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2680,
        2693
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3893": {
      "fn": "yVault.deposit",
      "offset": [
        2680,
        2693
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3894": {
      "fn": "yVault.deposit",
      "offset": [
        2668,
        2675
      ],
      "op": "DUP9",
      "path": "23"
    },
    "3895": {
      "fn": "yVault.deposit",
      "offset": [
        2668,
        2675
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3896": {
      "fn": "yVault.deposit",
      "offset": [
        2668,
        2694
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "3901": {
      "fn": "yVault.deposit",
      "offset": [
        2668,
        2679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1412"
    },
    "3904": {
      "fn": "yVault.deposit",
      "offset": [
        2668,
        2694
      ],
      "op": "AND",
      "path": "23"
    },
    "3905": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2668,
        2694
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3906": {
      "fn": "yVault.deposit",
      "offset": [
        2667,
        2706
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3907": {
      "fn": "yVault.deposit",
      "offset": [
        2658,
        2706
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3908": {
      "fn": "yVault.deposit",
      "offset": [
        2658,
        2706
      ],
      "op": "POP",
      "path": "23"
    },
    "3909": {
      "fn": "yVault.deposit",
      "offset": [
        2573,
        2717
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3910": {
      "fn": "yVault.deposit",
      "offset": [
        2726,
        2751
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 34,
      "value": "0xF4F"
    },
    "3913": {
      "fn": "yVault.deposit",
      "offset": [
        2732,
        2742
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3914": {
      "fn": "yVault.deposit",
      "offset": [
        2744,
        2750
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3915": {
      "fn": "yVault.deposit",
      "offset": [
        2726,
        2731
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16B8"
    },
    "3918": {
      "fn": "yVault.deposit",
      "jump": "i",
      "offset": [
        2726,
        2751
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3919": {
      "fn": "yVault.deposit",
      "offset": [
        2726,
        2751
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3920": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "POP",
      "path": "23"
    },
    "3921": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "POP",
      "path": "23"
    },
    "3922": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "POP",
      "path": "23"
    },
    "3923": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "POP",
      "path": "23"
    },
    "3924": {
      "fn": "yVault.deposit",
      "offset": [
        2208,
        2758
      ],
      "op": "POP",
      "path": "23"
    },
    "3925": {
      "fn": "yVault.deposit",
      "jump": "o",
      "offset": [
        2208,
        2758
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3926": {
      "fn": "yVault.earn",
      "offset": [
        1943,
        2112
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3927": {
      "fn": "yVault.earn",
      "offset": [
        1976,
        1985
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3929": {
      "fn": "yVault.earn",
      "offset": [
        1988,
        1999
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF60"
    },
    "3932": {
      "fn": "yVault.earn",
      "offset": [
        1988,
        1997
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9EF"
    },
    "3935": {
      "fn": "yVault.earn",
      "jump": "i",
      "offset": [
        1988,
        1999
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3936": {
      "fn": "yVault.earn",
      "offset": [
        1988,
        1999
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3937": {
      "fn": "yVault.earn",
      "offset": [
        2028,
        2038
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 35,
      "value": "0x8"
    },
    "3939": {
      "fn": "yVault.earn",
      "offset": [
        2028,
        2038
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3940": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3942": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3943": {
      "fn": "yVault.earn",
      "offset": [
        1976,
        1999
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3944": {
      "fn": "yVault.earn",
      "offset": [
        1976,
        1999
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3945": {
      "op": "POP"
    },
    "3946": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF8B"
    },
    "3949": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2045
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3950": {
      "fn": "yVault.earn",
      "offset": [
        2028,
        2038
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3953": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3954": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "DIV",
      "path": "23"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3964": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3965": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "AND",
      "path": "23"
    },
    "3966": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2014
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3967": {
      "fn": "yVault.earn",
      "offset": [
        2028,
        2038
      ],
      "op": "AND",
      "path": "23"
    },
    "3968": {
      "fn": "yVault.earn",
      "offset": [
        1976,
        1999
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3969": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2045
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "3974": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2027
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10D2"
    },
    "3977": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2045
      ],
      "op": "AND",
      "path": "23"
    },
    "3978": {
      "fn": "yVault.earn",
      "jump": "i",
      "offset": [
        2009,
        2045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3979": {
      "fn": "yVault.earn",
      "offset": [
        2009,
        2045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3980": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 36,
      "value": "0x8"
    },
    "3982": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3983": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "3985": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3986": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3988": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3989": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3990": {
      "op": "PUSH4",
      "value": "0xB02BF4B9"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3999": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4000": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4003": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4004": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4005": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "DIV",
      "path": "23"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4012": {
      "op": "SHL"
    },
    "4013": {
      "op": "SUB"
    },
    "4014": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4015": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4016": {
      "fn": "yVault.earn",
      "offset": [
        2092,
        2097
      ],
      "op": "AND",
      "path": "23"
    },
    "4017": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4019": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4020": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "ADD",
      "path": "23"
    },
    "4021": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4022": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4024": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4025": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "ADD",
      "path": "23"
    },
    "4026": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4027": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4028": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4029": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4030": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4031": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4032": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "AND",
      "path": "23"
    },
    "4033": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4034": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2083
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB02BF4B9"
    },
    "4039": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2083
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4040": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4042": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4043": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4044": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "ADD",
      "path": "23"
    },
    "4045": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4046": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4048": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4049": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4050": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4051": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4052": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4053": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4054": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "SUB",
      "path": "23"
    },
    "4055": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "ADD",
      "path": "23"
    },
    "4056": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4057": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4058": {
      "fn": "yVault.earn",
      "offset": [
        2067,
        2077
      ],
      "op": "DUP8",
      "path": "23"
    },
    "4059": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4060": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4061": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4062": {
      "op": "DUP1"
    },
    "4063": {
      "op": "ISZERO"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "4067": {
      "op": "JUMPI"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4070": {
      "op": "DUP1"
    },
    "4071": {
      "op": "REVERT"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "POP",
      "path": "23"
    },
    "4074": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "GAS",
      "path": "23"
    },
    "4075": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "CALL",
      "path": "23"
    },
    "4076": {
      "fn": "yVault.earn",
      "offset": [
        2055,
        2105
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4077": {
      "op": "DUP1"
    },
    "4078": {
      "op": "ISZERO"
    },
    "4079": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "4082": {
      "op": "JUMPI"
    },
    "4083": {
      "op": "RETURNDATASIZE"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "DUP1"
    },
    "4087": {
      "op": "RETURNDATACOPY"
    },
    "4088": {
      "op": "RETURNDATASIZE"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4091": {
      "op": "REVERT"
    },
    "4092": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 37
    },
    "4102": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4103": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "AND",
      "path": "2"
    },
    "4104": {
      "fn": "ERC20.allowance",
      "offset": [
        4057,
        4064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4106": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4107": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4108": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4109": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4111": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4113": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4114": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4115": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4116": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4118": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4119": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4120": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4121": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4122": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4123": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4124": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "AND",
      "path": "2"
    },
    "4125": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4126": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4127": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4128": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4129": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4130": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4131": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4132": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4133": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4134": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4135": {
      "fn": "yVault.depositAll",
      "offset": [
        2118,
        2202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4136": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 38,
      "value": "0x5"
    },
    "4138": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4139": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4141": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4142": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4143": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4152": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4153": {
      "fn": "yVault.depositAll",
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4154": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4156": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4157": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "ADD",
      "path": "23"
    },
    "4158": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4159": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4160": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4161": {
      "fn": "yVault.depositAll",
      "offset": [
        2159,
        2195
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB07"
    },
    "4164": {
      "fn": "yVault.depositAll",
      "offset": [
        2159,
        2195
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4165": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4168": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4169": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "DIV",
      "path": "23"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "SUB"
    },
    "4178": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "AND",
      "path": "23"
    },
    "4179": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4180": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2182
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "4185": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2182
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4186": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4188": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4189": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4190": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "ADD",
      "path": "23"
    },
    "4191": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4192": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4194": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4195": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4196": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4197": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4198": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4199": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "SUB",
      "path": "23"
    },
    "4200": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "ADD",
      "path": "23"
    },
    "4201": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4202": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2172
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4203": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4204": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4205": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4206": {
      "op": "DUP1"
    },
    "4207": {
      "op": "ISZERO"
    },
    "4208": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4211": {
      "op": "JUMPI"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4214": {
      "op": "DUP1"
    },
    "4215": {
      "op": "REVERT"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "POP",
      "path": "23"
    },
    "4218": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "GAS",
      "path": "23"
    },
    "4219": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "4220": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "ISZERO"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4226": {
      "op": "JUMPI"
    },
    "4227": {
      "op": "RETURNDATASIZE"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4230": {
      "op": "DUP1"
    },
    "4231": {
      "op": "RETURNDATACOPY"
    },
    "4232": {
      "op": "RETURNDATASIZE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4235": {
      "op": "REVERT"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "POP",
      "path": "23"
    },
    "4238": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "POP",
      "path": "23"
    },
    "4239": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "POP",
      "path": "23"
    },
    "4240": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "POP",
      "path": "23"
    },
    "4241": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4243": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4244": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4247": {
      "op": "DUP2"
    },
    "4248": {
      "op": "LT"
    },
    "4249": {
      "op": "ISZERO"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "4253": {
      "op": "JUMPI"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4256": {
      "op": "DUP1"
    },
    "4257": {
      "op": "REVERT"
    },
    "4258": {
      "op": "JUMPDEST"
    },
    "4259": {
      "op": "POP"
    },
    "4260": {
      "fn": "yVault.depositAll",
      "offset": [
        2167,
        2194
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4261": {
      "fn": "yVault.depositAll",
      "offset": [
        2159,
        2166
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDD6"
    },
    "4264": {
      "fn": "yVault.depositAll",
      "jump": "i",
      "offset": [
        2159,
        2195
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4265": {
      "offset": [
        666,
        691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4266": {
      "fn": "yVault.depositAll",
      "offset": [
        666,
        691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "4268": {
      "fn": "yVault.depositAll",
      "offset": [
        666,
        691
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4275": {
      "op": "SHL"
    },
    "4276": {
      "op": "SUB"
    },
    "4277": {
      "offset": [
        666,
        691
      ],
      "op": "AND",
      "path": "23"
    },
    "4278": {
      "fn": "yVault.depositAll",
      "offset": [
        666,
        691
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4279": {
      "fn": "yVault.depositAll",
      "jump": "o",
      "offset": [
        666,
        691
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4280": {
      "offset": [
        568,
        590
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4281": {
      "fn": "yVault.depositAll",
      "offset": [
        568,
        590
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "4283": {
      "fn": "yVault.depositAll",
      "offset": [
        568,
        590
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4284": {
      "fn": "yVault.depositAll",
      "offset": [
        568,
        590
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4285": {
      "fn": "yVault.depositAll",
      "jump": "o",
      "offset": [
        568,
        590
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4286": {
      "offset": [
        542,
        561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4287": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "4289": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4290": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4293": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4294": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "DIV",
      "path": "23"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4301": {
      "op": "SHL"
    },
    "4302": {
      "op": "SUB"
    },
    "4303": {
      "offset": [
        542,
        561
      ],
      "op": "AND",
      "path": "23"
    },
    "4304": {
      "fn": "yVault.depositAll",
      "offset": [
        542,
        561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4305": {
      "fn": "yVault.depositAll",
      "jump": "o",
      "offset": [
        542,
        561
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4306": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        696,
        871
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4307": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 39,
      "value": "0x40"
    },
    "4309": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4310": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4317": {
      "op": "SHL"
    },
    "4318": {
      "op": "SUB"
    },
    "4319": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4320": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "4"
    },
    "4321": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "4323": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4324": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "4"
    },
    "4325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4326": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "4328": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4329": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4330": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "4"
    },
    "4331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4333": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4334": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4335": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4336": {
      "op": "DUP1"
    },
    "4337": {
      "op": "DUP4"
    },
    "4338": {
      "op": "SUB"
    },
    "4339": {
      "op": "SWAP1"
    },
    "4340": {
      "op": "SWAP2"
    },
    "4341": {
      "op": "ADD"
    },
    "4342": {
      "op": "DUP2"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "4346": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4347": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4348": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "4"
    },
    "4349": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4350": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4354": {
      "op": "DUP2"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "DUP1"
    },
    "4357": {
      "op": "MLOAD"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "op": "AND"
    },
    "4367": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4374": {
      "op": "SHL"
    },
    "4375": {
      "op": "OR"
    },
    "4376": {
      "op": "SWAP1"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x93B"
    },
    "4381": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4383": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4384": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        797
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17B4"
    },
    "4387": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        778,
        864
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4388": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4389": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 40
    },
    "4390": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4391": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4392": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4399": {
      "op": "SHL"
    },
    "4400": {
      "op": "SUB"
    },
    "4401": {
      "fn": "ERC20._approve",
      "offset": [
        9460,
        9479
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 41
    },
    "4402": {
      "branch": 86,
      "fn": "ERC20._approve",
      "offset": [
        9460,
        9479
      ],
      "op": "AND",
      "path": "2"
    },
    "4403": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116D"
    },
    "4406": {
      "branch": 86,
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4407": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4409": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4416": {
      "op": "SHL"
    },
    "4417": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4418": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4419": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4421": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "2"
    },
    "4422": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4423": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4424": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4426": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "2"
    },
    "4427": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4428": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4429": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SUB",
      "path": "2"
    },
    "4430": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4431": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4432": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4434": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4435": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4436": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4438": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "2"
    },
    "4439": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4440": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA4"
    },
    "4443": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4445": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4446": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "4447": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4449": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "2"
    },
    "4450": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4451": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "POP",
      "path": "2"
    },
    "4452": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "POP",
      "path": "2"
    },
    "4453": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4455": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4456": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4457": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4458": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SUB",
      "path": "2"
    },
    "4459": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4460": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4461": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4468": {
      "op": "SHL"
    },
    "4469": {
      "op": "SUB"
    },
    "4470": {
      "fn": "ERC20._approve",
      "offset": [
        9538,
        9559
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 42
    },
    "4471": {
      "branch": 87,
      "fn": "ERC20._approve",
      "offset": [
        9538,
        9559
      ],
      "op": "AND",
      "path": "2"
    },
    "4472": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11B2"
    },
    "4475": {
      "branch": 87,
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4476": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4478": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4485": {
      "op": "SHL"
    },
    "4486": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4487": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4488": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4490": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "2"
    },
    "4491": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4492": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4493": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4495": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "2"
    },
    "4496": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4497": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4498": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SUB",
      "path": "2"
    },
    "4499": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4500": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4501": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "4503": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4504": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4505": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4507": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "2"
    },
    "4508": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4509": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACD"
    },
    "4512": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "4514": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4515": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "4516": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4518": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "2"
    },
    "4519": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4520": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "POP",
      "path": "2"
    },
    "4521": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "POP",
      "path": "2"
    },
    "4522": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4524": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4525": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4526": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4527": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SUB",
      "path": "2"
    },
    "4528": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4529": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4530": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4537": {
      "op": "SHL"
    },
    "4538": {
      "op": "SUB"
    },
    "4539": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 43
    },
    "4540": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4541": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "AND",
      "path": "2"
    },
    "4542": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4544": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4545": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4546": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4547": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4549": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4551": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4552": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4553": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4554": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4556": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4557": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4558": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4559": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4560": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4561": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "AND",
      "path": "2"
    },
    "4562": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4563": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4564": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4565": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4566": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4567": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4568": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4569": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4570": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4571": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4572": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9645
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4573": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9645
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4574": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9645
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4575": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 44
    },
    "4576": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4577": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4578": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4579": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4580": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4581": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4582": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4615": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4616": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4617": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4618": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SUB",
      "path": "2"
    },
    "4619": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4620": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4621": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "ADD",
      "path": "2"
    },
    "4622": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4623": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4624": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "POP",
      "path": "2"
    },
    "4625": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "POP",
      "path": "2"
    },
    "4626": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "POP",
      "path": "2"
    },
    "4627": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9359,
        9699
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4628": {
      "fn": "ERC20._transfer",
      "offset": [
        7035,
        7565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4635": {
      "op": "SHL"
    },
    "4636": {
      "op": "SUB"
    },
    "4637": {
      "fn": "ERC20._transfer",
      "offset": [
        7140,
        7160
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 45
    },
    "4638": {
      "branch": 88,
      "fn": "ERC20._transfer",
      "offset": [
        7140,
        7160
      ],
      "op": "AND",
      "path": "2"
    },
    "4639": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1259"
    },
    "4642": {
      "branch": 88,
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4643": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4645": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4652": {
      "op": "SHL"
    },
    "4653": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4654": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4655": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4657": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "ADD",
      "path": "2"
    },
    "4658": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4659": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4660": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4662": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "ADD",
      "path": "2"
    },
    "4663": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4664": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4665": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "SUB",
      "path": "2"
    },
    "4666": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4667": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4668": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "4670": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4671": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4672": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4674": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "ADD",
      "path": "2"
    },
    "4675": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4676": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B7F"
    },
    "4679": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "4681": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4682": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "4683": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4685": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "ADD",
      "path": "2"
    },
    "4686": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4687": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "POP",
      "path": "2"
    },
    "4688": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "POP",
      "path": "2"
    },
    "4689": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4691": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4692": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4693": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4694": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "SUB",
      "path": "2"
    },
    "4695": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4696": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4697": {
      "fn": "ERC20._transfer",
      "offset": [
        7132,
        7202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4704": {
      "op": "SHL"
    },
    "4705": {
      "op": "SUB"
    },
    "4706": {
      "fn": "ERC20._transfer",
      "offset": [
        7220,
        7243
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 46
    },
    "4707": {
      "branch": 89,
      "fn": "ERC20._transfer",
      "offset": [
        7220,
        7243
      ],
      "op": "AND",
      "path": "2"
    },
    "4708": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x129E"
    },
    "4711": {
      "branch": 89,
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4712": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4714": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4721": {
      "op": "SHL"
    },
    "4722": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4723": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4724": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4726": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "ADD",
      "path": "2"
    },
    "4727": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4728": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4729": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4731": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "ADD",
      "path": "2"
    },
    "4732": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4733": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4734": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "SUB",
      "path": "2"
    },
    "4735": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4736": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4737": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "4739": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4740": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4741": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4743": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "ADD",
      "path": "2"
    },
    "4744": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4745": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A88"
    },
    "4748": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "4750": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4751": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "4752": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4754": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "ADD",
      "path": "2"
    },
    "4755": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4756": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "POP",
      "path": "2"
    },
    "4757": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "POP",
      "path": "2"
    },
    "4758": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4760": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4761": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4762": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4763": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "SUB",
      "path": "2"
    },
    "4764": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4765": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4766": {
      "fn": "ERC20._transfer",
      "offset": [
        7212,
        7283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4767": {
      "fn": "ERC20._transfer",
      "offset": [
        7294,
        7341
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 47,
      "value": "0x12A9"
    },
    "4770": {
      "fn": "ERC20._transfer",
      "offset": [
        7315,
        7321
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4771": {
      "fn": "ERC20._transfer",
      "offset": [
        7323,
        7332
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4772": {
      "fn": "ERC20._transfer",
      "offset": [
        7334,
        7340
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4773": {
      "fn": "ERC20._transfer",
      "offset": [
        7294,
        7314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x93B"
    },
    "4776": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7294,
        7341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4777": {
      "fn": "ERC20._transfer",
      "offset": [
        7294,
        7341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4778": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 48,
      "value": "0x12EC"
    },
    "4781": {
      "fn": "ERC20._transfer",
      "offset": [
        7394,
        7400
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4782": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4784": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4785": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4786": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4788": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "ADD",
      "path": "2"
    },
    "4789": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4791": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4792": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4793": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "4795": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4796": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4797": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4799": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "ADD",
      "path": "2"
    },
    "4800": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AEF"
    },
    "4803": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "4805": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4806": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4813": {
      "op": "SHL"
    },
    "4814": {
      "op": "SUB"
    },
    "4815": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4816": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "AND",
      "path": "2"
    },
    "4817": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4819": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4820": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4821": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4822": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4824": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4825": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4826": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4827": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4829": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4830": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4831": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4832": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7389
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4833": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4834": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4839": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137B"
    },
    "4842": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "AND",
      "path": "2"
    },
    "4843": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7372,
        7443
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4844": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4851": {
      "op": "SHL"
    },
    "4852": {
      "op": "SUB"
    },
    "4853": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4854": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4855": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "AND",
      "path": "2"
    },
    "4856": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4858": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4859": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4860": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4861": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4863": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4864": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4865": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4866": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4868": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4869": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4870": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4871": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7443
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4872": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4873": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7443
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4874": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7443
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4875": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 49
    },
    "4876": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4877": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "AND",
      "path": "2"
    },
    "4878": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4879": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4880": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4881": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4882": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1321"
    },
    "4885": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4886": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7507
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4887": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7508
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4892": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7500
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FE"
    },
    "4895": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7508
      ],
      "op": "AND",
      "path": "2"
    },
    "4896": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7476,
        7508
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4897": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4904": {
      "op": "SHL"
    },
    "4905": {
      "op": "SUB"
    },
    "4906": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4907": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4908": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "AND",
      "path": "2"
    },
    "4909": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4911": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4912": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4913": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4914": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4916": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4917": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4918": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4919": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4921": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4922": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4923": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4924": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4925": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7508
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4926": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4927": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7508
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4928": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7508
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4929": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 50
    },
    "4930": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4931": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4932": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4933": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4934": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4935": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4936": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4937": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7473
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4938": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4939": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4940": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "AND",
      "path": "2"
    },
    "4941": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4942": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4975": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4976": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4977": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4978": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4979": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SUB",
      "path": "2"
    },
    "4980": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "ADD",
      "path": "2"
    },
    "4981": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4982": {
      "fn": "ERC20._transfer",
      "offset": [
        7523,
        7558
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4983": {
      "fn": "ERC20._transfer",
      "offset": [
        7035,
        7565
      ],
      "op": "POP",
      "path": "2"
    },
    "4984": {
      "fn": "ERC20._transfer",
      "offset": [
        7035,
        7565
      ],
      "op": "POP",
      "path": "2"
    },
    "4985": {
      "fn": "ERC20._transfer",
      "offset": [
        7035,
        7565
      ],
      "op": "POP",
      "path": "2"
    },
    "4986": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7035,
        7565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4987": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4988": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4990": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 51
    },
    "4991": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4992": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4993": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "1"
    },
    "4994": {
      "branch": 94,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4995": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140A"
    },
    "4998": {
      "branch": 94,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4999": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5001": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5010": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5011": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5013": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "5014": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5015": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5016": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5018": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "5019": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5020": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5021": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "5022": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5023": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5024": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5025": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5026": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5027": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5028": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5029": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5030": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5032": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "5033": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5034": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5035": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5036": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5037": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5038": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5040": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "5041": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5042": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5043": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5044": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5047": {
      "op": "JUMPDEST"
    },
    "5048": {
      "op": "DUP4"
    },
    "5049": {
      "op": "DUP2"
    },
    "5050": {
      "op": "LT"
    },
    "5051": {
      "op": "ISZERO"
    },
    "5052": {
      "op": "PUSH2",
      "value": "0x13CF"
    },
    "5055": {
      "op": "JUMPI"
    },
    "5056": {
      "op": "DUP2"
    },
    "5057": {
      "op": "DUP2"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "MLOAD"
    },
    "5060": {
      "op": "DUP4"
    },
    "5061": {
      "op": "DUP3"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "MSTORE"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5066": {
      "op": "ADD"
    },
    "5067": {
      "op": "PUSH2",
      "value": "0x13B7"
    },
    "5070": {
      "op": "JUMP"
    },
    "5071": {
      "op": "JUMPDEST"
    },
    "5072": {
      "op": "POP"
    },
    "5073": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5074": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5075": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5076": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5077": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5078": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5079": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5080": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "5081": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5082": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5084": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "1"
    },
    "5085": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5086": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5087": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13FC"
    },
    "5090": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5091": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5092": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5093": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "5094": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5095": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5096": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5098": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5099": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5101": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "5102": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5105": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "1"
    },
    "5106": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "5107": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "1"
    },
    "5108": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "1"
    },
    "5109": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5110": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5111": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5113": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "5114": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5115": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5116": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5117": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5118": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5119": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5120": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5121": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "5122": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5124": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5125": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5126": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5127": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "5128": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5129": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5130": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "op": "POP"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5135": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "1"
    },
    "5136": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5137": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5138": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5139": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5141": {
      "branch": 95,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5142": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1421"
    },
    "5145": {
      "branch": 95,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 52,
      "value": "0x0"
    },
    "5149": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x688"
    },
    "5152": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5153": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5154": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5155": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5156": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "1"
    },
    "5157": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5158": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5159": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5160": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5161": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 53,
      "value": "0x142E"
    },
    "5164": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5165": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "1"
    },
    "5166": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5167": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "1"
    },
    "5168": {
      "branch": 96,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "1"
    },
    "5169": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146B"
    },
    "5172": {
      "branch": 96,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5173": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5175": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5176": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5184": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5185": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5187": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "1"
    },
    "5188": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5189": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5190": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5192": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "1"
    },
    "5193": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5194": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5195": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "1"
    },
    "5196": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5197": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5198": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5200": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5201": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5202": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5204": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "1"
    },
    "5205": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5206": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B15"
    },
    "5209": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5211": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5212": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5213": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5215": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "1"
    },
    "5216": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5217": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "1"
    },
    "5218": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "1"
    },
    "5219": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5221": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5222": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5223": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5224": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "1"
    },
    "5225": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5226": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5227": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5228": {
      "fn": "SafeMath.mul",
      "offset": [
        2631,
        2632
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 54
    },
    "5229": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5230": {
      "op": "POP"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5234": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5235": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5237": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 55,
      "value": "0x146B"
    },
    "5240": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5241": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5242": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5244": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5245": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5246": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5248": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "1"
    },
    "5249": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5251": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5252": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5253": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "5255": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5256": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5257": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5259": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "1"
    },
    "5260": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "5293": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5294": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5295": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "1"
    },
    "5296": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1865"
    },
    "5299": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5300": {
      "fn": "ERC20._burn",
      "offset": [
        8524,
        8934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5307": {
      "op": "SHL"
    },
    "5308": {
      "op": "SUB"
    },
    "5309": {
      "fn": "ERC20._burn",
      "offset": [
        8607,
        8628
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 56
    },
    "5310": {
      "branch": 90,
      "fn": "ERC20._burn",
      "offset": [
        8607,
        8628
      ],
      "op": "AND",
      "path": "2"
    },
    "5311": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F9"
    },
    "5314": {
      "branch": 90,
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5315": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5317": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5324": {
      "op": "SHL"
    },
    "5325": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5326": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5327": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5329": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "ADD",
      "path": "2"
    },
    "5330": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5331": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5332": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5334": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "ADD",
      "path": "2"
    },
    "5335": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5336": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5337": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "SUB",
      "path": "2"
    },
    "5338": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5339": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5340": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "5342": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5343": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5344": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5346": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "ADD",
      "path": "2"
    },
    "5347": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5348": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5E"
    },
    "5351": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "5353": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5354": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "5355": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5357": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "ADD",
      "path": "2"
    },
    "5358": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5359": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "POP",
      "path": "2"
    },
    "5360": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "POP",
      "path": "2"
    },
    "5361": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5363": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5364": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5365": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5366": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "SUB",
      "path": "2"
    },
    "5367": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5368": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5369": {
      "fn": "ERC20._burn",
      "offset": [
        8599,
        8666
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5370": {
      "fn": "ERC20._burn",
      "offset": [
        8677,
        8726
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0x1505"
    },
    "5373": {
      "fn": "ERC20._burn",
      "offset": [
        8698,
        8705
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5374": {
      "fn": "ERC20._burn",
      "offset": [
        8715,
        8716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5376": {
      "fn": "ERC20._burn",
      "offset": [
        8719,
        8725
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5377": {
      "fn": "ERC20._burn",
      "offset": [
        8677,
        8697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x93B"
    },
    "5380": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8677,
        8726
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5381": {
      "fn": "ERC20._burn",
      "offset": [
        8677,
        8726
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5382": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x1548"
    },
    "5385": {
      "fn": "ERC20._burn",
      "offset": [
        8781,
        8787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5386": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5388": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5389": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5390": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5392": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "ADD",
      "path": "2"
    },
    "5393": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5395": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5396": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5397": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "5399": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5400": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5401": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5403": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "ADD",
      "path": "2"
    },
    "5404": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AAB"
    },
    "5407": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "5409": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5410": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5417": {
      "op": "SHL"
    },
    "5418": {
      "op": "SUB"
    },
    "5419": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5420": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "AND",
      "path": "2"
    },
    "5421": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5423": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5424": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5425": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5426": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5428": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5429": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5430": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5431": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5433": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5434": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5435": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5436": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8776
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5437": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5438": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5443": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137B"
    },
    "5446": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "AND",
      "path": "2"
    },
    "5447": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8758,
        8826
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5448": {
      "fn": "ERC20._burn",
      "offset": [
        8758,
        8826
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5455": {
      "op": "SHL"
    },
    "5456": {
      "op": "SUB"
    },
    "5457": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5458": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "AND",
      "path": "2"
    },
    "5459": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8746
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5461": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5462": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5463": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5464": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5466": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5467": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5468": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5469": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5471": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5472": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8755
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5473": {
      "fn": "ERC20._burn",
      "offset": [
        8737,
        8826
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5474": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8863
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x2"
    },
    "5476": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5477": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8875
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1574"
    },
    "5480": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5481": {
      "fn": "ERC20._burn",
      "offset": [
        8868,
        8874
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5482": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8875
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5487": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15BC"
    },
    "5490": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8875
      ],
      "op": "AND",
      "path": "2"
    },
    "5491": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8851,
        8875
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5492": {
      "fn": "ERC20._burn",
      "offset": [
        8851,
        8875
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5493": {
      "fn": "ERC20._burn",
      "offset": [
        8836,
        8848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5495": {
      "fn": "ERC20._burn",
      "offset": [
        8836,
        8875
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5496": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 60,
      "value": "0x40"
    },
    "5498": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5499": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5500": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5501": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5502": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5503": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5504": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5505": {
      "fn": "ERC20._burn",
      "offset": [
        8916,
        8917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5507": {
      "fn": "ERC20._burn",
      "offset": [
        8916,
        8917
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "op": "SUB"
    },
    "5516": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5517": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "AND",
      "path": "2"
    },
    "5518": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5519": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5552": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5553": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5554": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5555": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "SUB",
      "path": "2"
    },
    "5556": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5558": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "ADD",
      "path": "2"
    },
    "5559": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5560": {
      "fn": "ERC20._burn",
      "offset": [
        8890,
        8927
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5561": {
      "fn": "ERC20._burn",
      "offset": [
        8524,
        8934
      ],
      "op": "POP",
      "path": "2"
    },
    "5562": {
      "fn": "ERC20._burn",
      "offset": [
        8524,
        8934
      ],
      "op": "POP",
      "path": "2"
    },
    "5563": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8524,
        8934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5564": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5565": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5567": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 61,
      "value": "0x146B"
    },
    "5570": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5571": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5572": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5574": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5575": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5576": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5578": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "1"
    },
    "5579": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5581": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5582": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5583": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "5585": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5586": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5587": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5589": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "1"
    },
    "5590": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5623": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5624": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5625": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "1"
    },
    "5626": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137B"
    },
    "5629": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5630": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5631": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5633": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5634": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5635": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "1"
    },
    "5636": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 62
    },
    "5637": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5638": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "1"
    },
    "5639": {
      "branch": 97,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5640": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146B"
    },
    "5643": {
      "branch": 97,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5644": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5646": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5647": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5654": {
      "op": "SHL"
    },
    "5655": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5656": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5657": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5659": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5661": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5662": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "5663": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5664": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "5666": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "5668": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5669": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "5670": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5671": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5704": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "5706": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5707": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "5708": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5709": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5710": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5711": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5712": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5713": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5714": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "1"
    },
    "5715": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5717": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "5718": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5719": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5720": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5721": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 63,
      "value": "0x40"
    },
    "5723": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5724": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5731": {
      "op": "SHL"
    },
    "5732": {
      "op": "SUB"
    },
    "5733": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5734": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5735": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "4"
    },
    "5736": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "5738": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5739": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "4"
    },
    "5740": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5741": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5742": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "4"
    },
    "5743": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "5745": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5746": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "4"
    },
    "5747": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5748": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "5750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5751": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5752": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "4"
    },
    "5753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5754": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5757": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5758": {
      "op": "DUP1"
    },
    "5759": {
      "op": "DUP4"
    },
    "5760": {
      "op": "SUB"
    },
    "5761": {
      "op": "SWAP1"
    },
    "5762": {
      "op": "SWAP2"
    },
    "5763": {
      "op": "ADD"
    },
    "5764": {
      "op": "DUP2"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x84"
    },
    "5768": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5769": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5770": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "4"
    },
    "5771": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5772": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5773": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5774": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5776": {
      "op": "DUP2"
    },
    "5777": {
      "op": "ADD"
    },
    "5778": {
      "op": "DUP1"
    },
    "5779": {
      "op": "MLOAD"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5786": {
      "op": "SHL"
    },
    "5787": {
      "op": "SUB"
    },
    "5788": {
      "op": "AND"
    },
    "5789": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5796": {
      "op": "SHL"
    },
    "5797": {
      "op": "OR"
    },
    "5798": {
      "op": "SWAP1"
    },
    "5799": {
      "op": "MSTORE"
    },
    "5800": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16B2"
    },
    "5803": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5804": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5805": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5806": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        996
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17B4"
    },
    "5809": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        977,
        1073
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5810": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5811": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "5812": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "5813": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "5814": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "5815": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        877,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5816": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        8205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5823": {
      "op": "SHL"
    },
    "5824": {
      "op": "SUB"
    },
    "5825": {
      "fn": "ERC20._mint",
      "offset": [
        7918,
        7939
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 64
    },
    "5826": {
      "branch": 91,
      "fn": "ERC20._mint",
      "offset": [
        7918,
        7939
      ],
      "op": "AND",
      "path": "2"
    },
    "5827": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1713"
    },
    "5830": {
      "branch": 91,
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5831": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5833": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5834": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5843": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5844": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5846": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5848": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5849": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "5850": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5851": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5853": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5855": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5856": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "5857": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5858": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "5891": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "5893": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5894": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "5895": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5896": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5897": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5898": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5899": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5900": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5901": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "SUB",
      "path": "2"
    },
    "5902": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "5904": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "5905": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5906": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5907": {
      "fn": "ERC20._mint",
      "offset": [
        7910,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5908": {
      "fn": "ERC20._mint",
      "offset": [
        7986,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 65,
      "value": "0x171F"
    },
    "5911": {
      "fn": "ERC20._mint",
      "offset": [
        8015,
        8016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5913": {
      "fn": "ERC20._mint",
      "offset": [
        8019,
        8026
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5914": {
      "fn": "ERC20._mint",
      "offset": [
        8028,
        8034
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5915": {
      "fn": "ERC20._mint",
      "offset": [
        7986,
        8006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x93B"
    },
    "5918": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7986,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5919": {
      "fn": "ERC20._mint",
      "offset": [
        7986,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5920": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8073
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x2"
    },
    "5922": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8073
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5923": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1732"
    },
    "5926": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8085
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5927": {
      "fn": "ERC20._mint",
      "offset": [
        8078,
        8084
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5928": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8085
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5933": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FE"
    },
    "5936": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8085
      ],
      "op": "AND",
      "path": "2"
    },
    "5937": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8061,
        8085
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5938": {
      "fn": "ERC20._mint",
      "offset": [
        8061,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5939": {
      "fn": "ERC20._mint",
      "offset": [
        8046,
        8058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5941": {
      "fn": "ERC20._mint",
      "offset": [
        8046,
        8085
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "op": "SUB"
    },
    "5950": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 67
    },
    "5951": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "AND",
      "path": "2"
    },
    "5952": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5954": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5955": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5956": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5957": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5959": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5960": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5961": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5962": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5964": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5965": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5967": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8146
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175E"
    },
    "5970": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5971": {
      "fn": "ERC20._mint",
      "offset": [
        8139,
        8145
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5972": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8146
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5977": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FE"
    },
    "5980": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8146
      ],
      "op": "AND",
      "path": "2"
    },
    "5981": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8116,
        8146
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5982": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8146
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5989": {
      "op": "SHL"
    },
    "5990": {
      "op": "SUB"
    },
    "5991": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5992": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "AND",
      "path": "2"
    },
    "5993": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5995": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5996": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5997": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5998": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6000": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6001": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6002": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6003": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6005": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6006": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6007": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6008": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8146
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6009": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6010": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8146
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6011": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8146
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6012": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 68
    },
    "6013": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6014": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6015": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6016": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6017": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6018": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6019": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6020": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8113
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6021": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6022": {
      "fn": "ERC20._mint",
      "offset": [
        8095,
        8104
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6023": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6056": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6057": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6058": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6059": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SUB",
      "path": "2"
    },
    "6060": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6061": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6062": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "ADD",
      "path": "2"
    },
    "6063": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6064": {
      "fn": "ERC20._mint",
      "offset": [
        8161,
        8198
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6065": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        8205
      ],
      "op": "POP",
      "path": "2"
    },
    "6066": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        8205
      ],
      "op": "POP",
      "path": "2"
    },
    "6067": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7835,
        8205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6068": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2959,
        3710
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6069": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "6071": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1809"
    },
    "6074": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3432,
        3436
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6075": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6077": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6078": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6081": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "4"
    },
    "6082": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6085": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6086": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6088": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6089": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6090": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "4"
    },
    "6093": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6126": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6127": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6128": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "POP",
      "path": "4"
    },
    "6129": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3417
      ],
      "op": "DUP6",
      "path": "4"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6136": {
      "op": "SHL"
    },
    "6137": {
      "op": "SUB"
    },
    "6138": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "AND",
      "path": "4"
    },
    "6139": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18CA"
    },
    "6142": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6143": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6144": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6145": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6146": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "6151": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "AND",
      "path": "4"
    },
    "6152": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6153": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6154": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6155": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6156": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6157": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6158": {
      "op": "POP"
    },
    "6159": {
      "branch": 92,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3508
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6160": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x93B"
    },
    "6163": {
      "branch": 92,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6164": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3627,
        3637
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 69
    },
    "6165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6166": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6168": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ADD",
      "path": "4"
    },
    "6169": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6170": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6173": {
      "op": "DUP2"
    },
    "6174": {
      "op": "LT"
    },
    "6175": {
      "op": "ISZERO"
    },
    "6176": {
      "op": "PUSH2",
      "value": "0x1828"
    },
    "6179": {
      "op": "JUMPI"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6182": {
      "op": "DUP1"
    },
    "6183": {
      "op": "REVERT"
    },
    "6184": {
      "op": "JUMPDEST"
    },
    "6185": {
      "op": "POP"
    },
    "6186": {
      "branch": 93,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6187": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x93B"
    },
    "6190": {
      "branch": 93,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6191": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6193": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6200": {
      "op": "SHL"
    },
    "6201": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6202": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6203": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6205": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "4"
    },
    "6206": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6207": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6208": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6210": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "4"
    },
    "6211": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6212": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6213": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "4"
    },
    "6214": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6215": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6216": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "6218": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6219": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6220": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6222": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "4"
    },
    "6223": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6224": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BC8"
    },
    "6227": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "6229": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6230": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "6231": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6233": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "4"
    },
    "6234": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6235": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "4"
    },
    "6236": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "4"
    },
    "6237": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6240": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6241": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "4"
    },
    "6243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6245": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6246": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6248": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 70
    },
    "6249": {
      "branch": 98,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6250": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B4"
    },
    "6253": {
      "branch": 98,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6254": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6256": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6263": {
      "op": "SHL"
    },
    "6264": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6265": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6266": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6268": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6270": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6271": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "1"
    },
    "6272": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6273": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6274": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6275": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6276": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6277": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6279": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6280": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "1"
    },
    "6281": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6282": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6283": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6284": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6285": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6286": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6287": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6288": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6290": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6291": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6292": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "1"
    },
    "6293": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6294": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6295": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6296": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "1"
    },
    "6297": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6298": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6299": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6300": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6301": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6303": {
      "op": "DUP4"
    },
    "6304": {
      "op": "ISZERO"
    },
    "6305": {
      "op": "PUSH2",
      "value": "0x13CF"
    },
    "6308": {
      "op": "JUMPI"
    },
    "6309": {
      "op": "DUP2"
    },
    "6310": {
      "op": "DUP2"
    },
    "6311": {
      "op": "ADD"
    },
    "6312": {
      "op": "MLOAD"
    },
    "6313": {
      "op": "DUP4"
    },
    "6314": {
      "op": "DUP3"
    },
    "6315": {
      "op": "ADD"
    },
    "6316": {
      "op": "MSTORE"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6319": {
      "op": "ADD"
    },
    "6320": {
      "op": "PUSH2",
      "value": "0x13B7"
    },
    "6323": {
      "op": "JUMP"
    },
    "6324": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6325": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "1"
    },
    "6326": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6328": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6329": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6330": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6331": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18C0"
    },
    "6334": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6335": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "1"
    },
    "6336": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6337": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "1"
    },
    "6338": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "6339": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "POP"
    },
    "6342": {
      "op": "POP"
    },
    "6343": {
      "op": "POP"
    },
    "6344": {
      "op": "POP"
    },
    "6345": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6346": {
      "fn": "Address.functionCall",
      "offset": [
        3770,
        3964
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6347": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6349": {
      "fn": "Address.functionCall",
      "offset": [
        3904,
        3957
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 71,
      "value": "0x18D9"
    },
    "6352": {
      "fn": "Address.functionCall",
      "offset": [
        3927,
        3933
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6353": {
      "fn": "Address.functionCall",
      "offset": [
        3935,
        3939
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6354": {
      "fn": "Address.functionCall",
      "offset": [
        3941,
        3942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6356": {
      "fn": "Address.functionCall",
      "offset": [
        3944,
        3956
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6357": {
      "fn": "Address.functionCall",
      "offset": [
        3904,
        3926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E1"
    },
    "6360": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3904,
        3957
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6361": {
      "fn": "Address.functionCall",
      "offset": [
        3904,
        3957
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6362": {
      "fn": "Address.functionCall",
      "offset": [
        3897,
        3957
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "6363": {
      "fn": "Address.functionCall",
      "offset": [
        3770,
        3964
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6364": {
      "op": "POP"
    },
    "6365": {
      "op": "POP"
    },
    "6366": {
      "op": "POP"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3770,
        3964
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6369": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5117,
        6075
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6370": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5247,
        5259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6372": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5279,
        5297
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 72,
      "value": "0x18EC"
    },
    "6375": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5290,
        5296
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6376": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5279,
        5289
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4E"
    },
    "6379": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5279,
        5297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6380": {
      "branch": 83,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5279,
        5297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6381": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x193D"
    },
    "6384": {
      "branch": 83,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6385": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6387": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6388": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6397": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6398": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6400": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6402": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6403": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "5"
    },
    "6404": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6405": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1D"
    },
    "6407": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6409": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6410": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "5"
    },
    "6411": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6412": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6445": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6447": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6448": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "5"
    },
    "6449": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6450": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6451": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6452": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6453": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6454": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6455": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SUB",
      "path": "5"
    },
    "6456": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "6458": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "ADD",
      "path": "5"
    },
    "6459": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6460": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6461": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5271,
        5331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6462": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5402,
        5414
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6464": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5416,
        5439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6466": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6473": {
      "op": "SHL"
    },
    "6474": {
      "op": "SUB"
    },
    "6475": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5454
      ],
      "op": "AND",
      "path": "5"
    },
    "6476": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5463,
        5471
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6477": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5474,
        5478
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6478": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6480": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6481": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6482": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6483": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6484": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6485": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6486": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6488": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "5"
    },
    "6489": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6490": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6491": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6492": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6493": {
      "op": "JUMPDEST"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6496": {
      "op": "DUP4"
    },
    "6497": {
      "op": "LT"
    },
    "6498": {
      "op": "PUSH2",
      "value": "0x197C"
    },
    "6501": {
      "op": "JUMPI"
    },
    "6502": {
      "op": "DUP1"
    },
    "6503": {
      "op": "MLOAD"
    },
    "6504": {
      "op": "DUP3"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6508": {
      "op": "NOT"
    },
    "6509": {
      "op": "SWAP1"
    },
    "6510": {
      "op": "SWAP3"
    },
    "6511": {
      "op": "ADD"
    },
    "6512": {
      "op": "SWAP2"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6515": {
      "op": "SWAP2"
    },
    "6516": {
      "op": "DUP3"
    },
    "6517": {
      "op": "ADD"
    },
    "6518": {
      "op": "SWAP2"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "6523": {
      "op": "JUMP"
    },
    "6524": {
      "op": "JUMPDEST"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6527": {
      "op": "DUP4"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6530": {
      "op": "SUB"
    },
    "6531": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6534": {
      "op": "EXP"
    },
    "6535": {
      "op": "SUB"
    },
    "6536": {
      "op": "DUP1"
    },
    "6537": {
      "op": "NOT"
    },
    "6538": {
      "op": "DUP3"
    },
    "6539": {
      "op": "MLOAD"
    },
    "6540": {
      "op": "AND"
    },
    "6541": {
      "op": "DUP2"
    },
    "6542": {
      "op": "DUP5"
    },
    "6543": {
      "op": "MLOAD"
    },
    "6544": {
      "op": "AND"
    },
    "6545": {
      "op": "DUP1"
    },
    "6546": {
      "op": "DUP3"
    },
    "6547": {
      "op": "OR"
    },
    "6548": {
      "op": "DUP6"
    },
    "6549": {
      "op": "MSTORE"
    },
    "6550": {
      "op": "POP"
    },
    "6551": {
      "op": "POP"
    },
    "6552": {
      "op": "POP"
    },
    "6553": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6554": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6555": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6556": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6557": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6558": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "ADD",
      "path": "5"
    },
    "6559": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6560": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6561": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6562": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6564": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6566": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6567": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6568": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6569": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SUB",
      "path": "5"
    },
    "6570": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6571": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6572": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6573": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "GAS",
      "path": "5"
    },
    "6574": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "CALL",
      "path": "5"
    },
    "6575": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6576": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6577": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6578": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6579": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5443,
        5479
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6580": {
      "op": "DUP1"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6583": {
      "op": "DUP2"
    },
    "6584": {
      "op": "EQ"
    },
    "6585": {
      "op": "PUSH2",
      "value": "0x19DE"
    },
    "6588": {
      "op": "JUMPI"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6591": {
      "op": "MLOAD"
    },
    "6592": {
      "op": "SWAP2"
    },
    "6593": {
      "op": "POP"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6596": {
      "op": "NOT"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6599": {
      "op": "RETURNDATASIZE"
    },
    "6600": {
      "op": "ADD"
    },
    "6601": {
      "op": "AND"
    },
    "6602": {
      "op": "DUP3"
    },
    "6603": {
      "op": "ADD"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6606": {
      "op": "MSTORE"
    },
    "6607": {
      "op": "RETURNDATASIZE"
    },
    "6608": {
      "op": "DUP3"
    },
    "6609": {
      "op": "MSTORE"
    },
    "6610": {
      "op": "RETURNDATASIZE"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6615": {
      "op": "DUP5"
    },
    "6616": {
      "op": "ADD"
    },
    "6617": {
      "op": "RETURNDATACOPY"
    },
    "6618": {
      "op": "PUSH2",
      "value": "0x19E3"
    },
    "6621": {
      "op": "JUMP"
    },
    "6622": {
      "op": "JUMPDEST"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6625": {
      "op": "SWAP2"
    },
    "6626": {
      "op": "POP"
    },
    "6627": {
      "op": "JUMPDEST"
    },
    "6628": {
      "op": "POP"
    },
    "6629": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6630": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6631": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6632": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5401,
        5479
      ],
      "op": "POP",
      "path": "5"
    },
    "6633": {
      "branch": 84,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5493,
        5500
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6634": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6635": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19F7"
    },
    "6638": {
      "branch": 84,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6639": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5523,
        5533
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 73
    },
    "6640": {
      "op": "POP"
    },
    "6641": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5516,
        5533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D9"
    },
    "6644": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5516,
        5533
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6645": {
      "op": "POP"
    },
    "6646": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5516,
        5533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6647": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5489,
        6069
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6648": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5634,
        5651
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6649": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5634,
        5651
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6650": {
      "branch": 85,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5634,
        5655
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6651": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5630,
        6059
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A07"
    },
    "6654": {
      "branch": 85,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5630,
        6059
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6655": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5892,
        5902
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6656": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5886,
        5903
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6657": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5952,
        5967
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6658": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5939,
        5949
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6659": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5935,
        5937
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6661": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5931,
        5950
      ],
      "op": "ADD",
      "path": "5"
    },
    "6662": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5924,
        5968
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6663": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5841,
        5986
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6664": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 74,
      "value": "0x40"
    },
    "6666": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6673": {
      "op": "SHL"
    },
    "6674": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6675": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6676": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6678": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6680": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6681": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "5"
    },
    "6682": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6683": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6684": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6685": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6686": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6687": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6689": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6690": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "5"
    },
    "6691": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6692": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6693": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6694": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6031,
        6043
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6695": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6031,
        6043
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6696": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6697": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6698": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6699": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6700": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6702": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "5"
    },
    "6703": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6704": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6705": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6706": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "ADD",
      "path": "5"
    },
    "6707": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6708": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6709": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6710": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6711": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        6024,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6713": {
      "op": "DUP4"
    },
    "6714": {
      "op": "ISZERO"
    },
    "6715": {
      "op": "PUSH2",
      "value": "0x13CF"
    },
    "6718": {
      "op": "JUMPI"
    },
    "6719": {
      "op": "DUP2"
    },
    "6720": {
      "op": "DUP2"
    },
    "6721": {
      "op": "ADD"
    },
    "6722": {
      "op": "MLOAD"
    },
    "6723": {
      "op": "DUP4"
    },
    "6724": {
      "op": "DUP3"
    },
    "6725": {
      "op": "ADD"
    },
    "6726": {
      "op": "MSTORE"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6729": {
      "op": "ADD"
    },
    "6730": {
      "op": "PUSH2",
      "value": "0x13B7"
    },
    "6733": {
      "op": "JUMP"
    },
    "6734": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1328
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6735": {
      "fn": "Address.isContract",
      "offset": [
        778,
        782
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6737": {
      "fn": "Address.isContract",
      "offset": [
        1239,
        1259
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6738": {
      "fn": "Address.isContract",
      "offset": [
        1239,
        1259
      ],
      "op": "EXTCODEHASH",
      "path": "5"
    },
    "6739": {
      "fn": "Address.isContract",
      "offset": [
        1084,
        1150
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "6772": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 75
    },
    "6773": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6774": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "EQ",
      "path": "5"
    },
    "6775": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6776": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6777": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1301
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6778": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1320
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D9"
    },
    "6781": {
      "fn": "Address.isContract",
      "offset": [
        1278,
        1320
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6782": {
      "op": "POP"
    },
    "6783": {
      "op": "POP"
    },
    "6784": {
      "fn": "Address.isContract",
      "offset": [
        1305,
        1320
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6785": {
      "fn": "Address.isContract",
      "offset": [
        1305,
        1320
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6786": {
      "fn": "Address.isContract",
      "offset": [
        1305,
        1320
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6787": {
      "fn": "Address.isContract",
      "offset": [
        1270,
        1321
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6788": {
      "op": "POP"
    },
    "6789": {
      "op": "POP"
    },
    "6790": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1328
      ],
      "op": "JUMP",
      "path": "5"
    }
  },
  "sha1": "4039274c38d953888e3f4a77fb7de8cb05d836d1",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/GSN/Context.sol\";\n\nimport \"../IController.sol\";\n\ncontract yVault is ERC20 {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    IERC20 public token;\n\n    uint public min = 9500;\n    uint public constant max = 10000;\n\n    address public governance;\n    address public controller;\n\n    constructor (address _token, address _controller) public ERC20(\n        string(abi.encodePacked(\"yearn \", ERC20(_token).name())),\n        string(abi.encodePacked(\"y\", ERC20(_token).symbol()))\n    ) {\n        _setupDecimals(ERC20(_token).decimals());\n        token = IERC20(_token);\n        governance = msg.sender;\n        controller = _controller;\n    }\n\n    function balance() public view returns (uint) {\n        return token.balanceOf(address(this))\n                .add(IController(controller).balanceOf(address(token)));\n    }\n\n    function setMin(uint _min) external {\n        require(msg.sender == governance, \"!governance\");\n        min = _min;\n    }\n\n    function setGovernance(address _governance) public {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) public {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n\n    // Custom logic in here for how much the vault allows to be borrowed\n    // Sets minimum required on-hand to keep small withdrawals cheap\n    function available() public view returns (uint) {\n        return token.balanceOf(address(this)).mul(min).div(max);\n    }\n\n    function earn() public {\n        uint _bal = available();\n        token.safeTransfer(controller, _bal);\n        IController(controller).earn(address(token), _bal);\n    }\n\n    function depositAll() external {\n        deposit(token.balanceOf(msg.sender));\n    }\n\n    function deposit(uint _amount) public {\n        uint _pool = balance();\n        uint _before = token.balanceOf(address(this));\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n        uint _after = token.balanceOf(address(this));\n        _amount = _after.sub(_before); // Additional check for deflationary tokens\n        uint shares = 0;\n        if (totalSupply() == 0) {\n            shares = _amount;\n        } else {\n            shares = (_amount.mul(totalSupply())).div(_pool);\n        }\n        _mint(msg.sender, shares);\n    }\n\n    function withdrawAll() external {\n        withdraw(balanceOf(msg.sender));\n    }\n\n\n    // Used to swap any borrowed reserve over the debt limit to liquidate to 'token'\n    function harvest(address reserve, uint amount) external {\n        require(msg.sender == controller, \"!controller\");\n        require(reserve != address(token), \"token\");\n        IERC20(reserve).safeTransfer(controller, amount);\n    }\n\n    // No rebalance implementation for lower fees and faster swaps\n    function withdraw(uint _shares) public {\n        uint r = (balance().mul(_shares)).div(totalSupply());\n        _burn(msg.sender, _shares);\n\n        // Check balance\n        uint b = token.balanceOf(address(this));\n        if (b < r) {\n            uint _withdraw = r.sub(b);\n            IController(controller).withdraw(address(token), _withdraw);\n            uint _after = token.balanceOf(address(this));\n            uint _diff = _after.sub(b);\n            if (_diff < _withdraw) {\n                r = b.add(_diff);\n            }\n        }\n\n        token.safeTransfer(msg.sender, r);\n    }\n\n    function getPricePerFullShare() public view returns (uint) {\n        return balance().mul(1e18).div(totalSupply());\n    }\n}\n",
  "sourceMap": "415:3544:23:-:0;;;586:4;568:22;;698:354;8:9:-1;5:2;;;30:1;27;20:12;5:2;698:354:23;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:354:23;;;;;;;;804:20;;-1:-1:-1;;;804:20:23;;;;-1:-1:-1;;;;;804:18:23;;;;;:20;;;;;;;;;;;;;;:18;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;804:20:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;804:20:23;;;;;;39:16:-1;36:1;17:17;2:54;101:4;804:20:23;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;804:20:23;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;804:20:23;;420:4:-1;411:14;;;;804:20:23;;;;;411:14:-1;804:20:23;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;804:20:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:48;;;;;;-1:-1:-1;;;777:48:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;777:48:23;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;777:48:23;;;871:6;-1:-1:-1;;;;;865:20:23;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;865:22:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;865:22:23;;;;;;39:16:-1;36:1;17:17;2:54;101:4;865:22:23;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;865:22:23;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;865:22:23;;420:4:-1;411:14;;;;865:22:23;;;;;411:14:-1;865:22:23;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;865:22:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:45;;;;;;-1:-1:-1;;;843:45:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;843:45:23;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;843:45:23;;;2093:4:2;2085:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2107:16:2;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:2;:14;;-1:-1:-1;;2133:14:2;2145:2;2133:14;;;-1:-1:-1;921:24:23::1;::::0;;-1:-1:-1;;;921:24:23;;;;906:40:::1;::::0;-1:-1:-1;;;;;921:22:23;::::1;::::0;::::1;::::0;:24:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:22;:24;::::1;;5:2:-1::0;::::1;;;30:1;27::::0;20:12:::1;5:2;921:24:23;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;921:24:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;-1:-1:::0;921:24:23;-1:-1:-1;;;;;906:14:23::1;:40:::0;:::i:1;:::-;956:5;:22:::0;;-1:-1:-1;;;;;;956:22:23::1;;-1:-1:-1::0;;;;;956:22:23;;::::1;;;::::0;;988:10:::1;:23:::0;;1001:10:::1;-1:-1:-1::0;;;;;;988:23:23;;::::1;;::::0;;;1021:10:::1;:24:::0;;;;::::1;::::0;;;::::1;;::::0;;415:3544;;10022:88:2;10082:9;:21;;-1:-1:-1;;10082:21:2;;;;;;;;;;;;10022:88::o;415:3544:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;415:3544:23;;;-1:-1:-1;415:3544:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/vaults/yVault.sol",
  "type": "contract"
}